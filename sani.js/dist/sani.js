var Animator=function(){"use strict";var _Mathsqrt=Math.sqrt;var _Mathround=Math.round;var _Mathfloor=Math.floor;var _Mathmin=Math.min;var _Mathmax=Math.max;function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")}function unwrapExports(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e["default"]:e}function createCommonjsModule(e,t){return t={exports:{}},e(t,t.exports),t.exports}function configure(e){const t=this[_settings];void 0!==e.beatDuration&&(t.beatDuration=e.beatDuration),void 0!==e.slowdown&&(t.slowdown=e.slowdown),void 0!==e.dwell&&(t.dwell=e.dwell),void 0!==e.ballColor&&(t.ballColor=e.ballColor),void 0!==e.reversed&&(t.reversed=e.reversed),void 0!==e.continuous&&(t.continuous=e.continuous);const{beatDuration:n,dwell:a,slowdown:i,ballColor:s,reversed:r,continuous:o}=t;if("number"!=typeof n)throw new Error("Invalid configuration (`beatDuration` must be a number).");if(0>=n)throw new Error("Invalid configuration (`beatDuration` must be positive).");if("number"!=typeof i)throw new Error("Invalid configuration (`slowdown` must be a number).");if(0>=i)throw new Error("Invalid configuration (`slowdown` must be positive).");if("number"!=typeof a)throw new Error("Invalid configuration (`dwell` must be a number).");if(0>a||1<a)throw new Error("Invalid configuration (`dwell` must be in [0-1] range).");if("string"!=typeof s)throw new Error("Invalid configuration (`ballColor` must be a string).");if(!/^#[0-9a-f]{3}(?:[0-9a-f]{3})?/i.test(s))throw new Error("Invalid configuration (`ballColor` must be a valid css color).");if("boolean"!=typeof r)throw new Error("Invalid configuration (`reversed` must be a boolean).");if("boolean"!=typeof o)throw new Error("Invalid configuration (`continuous` must be a boolean).")}function lcm(e,t){const n=_Mathmax(e,t);const a=_Mathmin(e,t);let i=n;for(;0!=i%a;)i+=n;return i}function strictifyThrows(e){if(2===e.degree)return e.throws;const t=[];const a=lcm(e.throws.length,2);for(let n=0;n<a;n++){const a=[[],[]];const i=e.throws[n%e.throws.length][0].map(e=>({value:e.value,from:n%2,to:(n+e.value)%2}));a[n%2]=i,t.push(a)}return t}function clamp(e,t,n){return _Mathmax(t,_Mathmin(n,e))}function prepare(e,t){var a=Math.abs;webmidi_cjs_min_10.enable(function(e){e?console.log("WebMidi could not be enabled.",e):(console.log("WebMidi enabled!"),webmidi_cjs_min_10.outputs.forEach(e=>console.log(e.manufacturer,e.name)))});const i=Array(t.props).fill().map((e,t)=>{const n="#"+_Mathfloor(16777215*Math.random()).toString(16);return new Ball(n,t)});const s=e.beatDuration*t.degree;let r=0;let o=0;const l=250;const d=350-200*a(.5-e.dwell)+15*(t.greatestValue-3);const c=500+d;const p=3-t.degree;const u=.1*p;const h=_Mathmax(u,_Mathmin(.9*p,e.dwell*p));const m=strictifyThrows(t);const f=lcm(m.length,t.strictStates.length);for(let n=0;n<f;n++){const d=m[n%m.length];const p=t.strictStates[n%t.strictStates.length];const f=d.map(e=>e.reduce((e,t)=>{const n=`${t.value}-${t.to}`;return e[n]=(e[n]||0)+1,e},{}));const g=_Mathmax(...f.map(e=>_Mathmax(...Object.keys(e).map(t=>e[t]))));let v=h;if(1<=h){const e=f.reduce((e,t)=>_Mathmax(e,t["1-0"]||0,t["1-1"]||0),0);0<e&&(v=1-u)}for(let n=0;2>n;n++){const h=d[n];const m=_Mathmin(...h.map(({value:e})=>e));const y=motion.s(0,-gravity.y,.5*(m-v)*s);for(let d=0;d<h.length;d++){const b=h[d];if(0===b.value)continue;const _=i[p[n%t.degree][0][d]-1];const E=1===g?0:_Mathmin(u,(v-u)/(g-1));const w=--f[n][`${b.value}-${b.to}`];let I=v-(g-1)*E;let S=E*w;let M=b.value-(S+I);I*=s,S*=s,M*=s;let N;let x;const A=clamp(l-100*a(.5-e.dwell),150,l)-(2===m?50:0);const C=.5*e.ballRadius;const T=_Mathmin(1e3,500+30*t.greatestValue);const k=clamp(.5*I+20*t.greatestValue,C,T);let D=.3*k+.7*k*m/t.greatestValue;D=_Mathmin(3*I,D),D=_Mathmin(2===m?100:.5*y,D),N=0===b.from?0:c,x=0===b.from?A:c-A,e.reversed&&([N,x]=[x,N]),_.animations.push({type:"catch",duration:I,width:x-N,yModifier:D/catchSpline.maximum().y,position:{x:N,y:0},getPosition:getPosition.catch});const B=motion.s(0,-gravity.y,M/2);N=0===b.from?A:c-A,x=0===b.to?0:c,e.reversed&&(b.from===b.to?[N,x]=[x,N]:(N+=0===b.from?-A:A,x+=0===b.from?-A:A)),_.animations.push({type:"throw",duration:M,position:{x:N,y:0},velocity:{x:(x-N)/M,y:motion.v(0,-gravity.y,B)},acceleration:gravity,getPosition:getPosition.throw}),0<S&&_.animations.push({type:"wait",duration:S,position:{x:x,y:0},getPosition:getPosition.wait}),B>r&&(r=B),D>o&&(o=D)}}}const[n]=t.strictStates;for(const a of n)for(let e=0;e<a.length;e++)for(const t of a[e])i[t-1].animations[-1]={type:"wait",duration:e*s,position:{x:null,y:null},getPosition:getPosition.wait};const g=r+o;return[i,{innerWidth:c,innerHeight:g,catchHeight:o}]}function cache(e,t){canvases={};const n=2.2*(t.ballRadius*t.multiplier);for(const a of e){const{color:e}=a;if(a.canvas=canvases[e],a.canvas)continue;const i=document.createElement("canvas");const s=i.getContext("2d");i.width=n,i.height=n,a.draw(s,t,{x:n/2,y:n/2}),a.canvas=i,canvases[e]=i}}function scale(e,t=!0){const n=e[_virtual];const{canvas:a}=e.context;if(!n){const e=window.devicePixelRatio||1;const n=_Mathfloor(a.clientWidth*e);const i=_Mathfloor(a.clientHeight*e);if(t&&a.width===n&&a.height===i)return;a.width=n,a.height=i}const i=e[_settings$1];const s=e[_balls];const{context:r}=e;const{width:o,height:l}=a;const{innerWidth:d,innerHeight:c,catchHeight:p,ballRadius:u}=i;const h=_Mathmax(0,_Mathmin(o/(d+2*u),l/(c+2*u)));i.multiplier=h;const m={x:_Mathmax(0,o-(d+2*u)*h),y:_Mathmax(0,l-(c+2*u)*h)};const f={x:.5*m.x+u*h,y:.5*m.y+u*h};r.translate(f.x,l-f.y-p*h),r.scale(1,-1),cache(s,i)}function clear(e){e.save(),e.setTransform(1,0,0,1,0,0),e.clearRect(0,0,e.canvas.width,e.canvas.height),e.restore()}function update(e,t){const{context:n}=e;const a=e[_settings$2];const i=e[_balls$1];const s=e[_virtual$1];s||scale(e),clear(n);for(const s of i)e.paused||s.update(t/a.slowdown),s.draw(n,a)}function play(e){if(this.paused=!1,void 0!==e){this[_loop]&&this.stop();const{Siteswap}=this.constructor;if("string"==typeof e&&(e=new Siteswap(e)),this.siteswap=e,!(e instanceof Siteswap))throw new Error("Invalid input.");if(!e.valid)throw new Error("Invalid siteswap.");if(2<e.degree)throw new Error(`Pattern requires ${e.degree} hands.`);if(0!==e.greatestValue){const t=this[_settings$3];const[n,{innerWidth:a,innerHeight:i,catchHeight:s}]=prepare(t,e);t.innerWidth=a,t.innerHeight=i,t.catchHeight=s,this[_balls$2]=n,scale(this,!1),this[_settings$3].continuous&&this.seek(0,!0),this[_loop]=new Loop(e=>update(this,e))}}}function stop(){const e=this[_loop$1];e&&(clear(this.context),e.kill(),this[_loop$1]=null,this[_balls$3].length=0,this.siteswap=null)}function pause(){this.paused=!0}function dye(e,t){const n=this[_settings$4];const a=this[_balls$4];if(void 0===t)for(const t of a)t.color=e;else{if(!a[t])throw new Error("Ball doesn't exist.");a[t].color=e}cache(a,n)}function seek(e,t=!1){if("number"!=typeof e||0>e||100<e)throw new Error("Expected number in [0-100] range.");100===e&&(e=0),t&&(e+=100);const n=this[_settings$5];const a=this[_balls$5];const i=this.siteswap.fullPeriod*(this.siteswap.fullPeriod%2?2:1)*n.beatDuration;for(const n of a)n.update(e/100*i,!0)}function toGIF(e){const{canvas:t}=this.context;const n={width:t.width,height:t.height};return Animator.toGIF(this.siteswap,Object.assign(n,this[_settings$6],e))}function toGIF$1(e,t){if(!e||!e.valid)throw new Error("Invalid siteswap.");const{width:n=300,height:a=600,fps:i=60,backgroundColor:s="#fff"}=t;const r=new Animator({width:n,height:a},t);const{canvas:o}=r.context;r.play(e),r[_loop$2]=null,r.seek(0,!0),workerScript||(workerScript=URL.createObjectURL(new Blob(["// gif.worker.js 0.2.1 - https://github.com/jnordberg/gif.js\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){var NeuQuant=require(\"./TypedNeuQuant.js\");var LZWEncoder=require(\"./LZWEncoder.js\");function ByteArray(){this.page=-1;this.pages=[];this.newPage()}ByteArray.pageSize=4096;ByteArray.charMap={};for(var i=0;i<256;i++)ByteArray.charMap[i]=String.fromCharCode(i);ByteArray.prototype.newPage=function(){this.pages[++this.page]=new Uint8Array(ByteArray.pageSize);this.cursor=0};ByteArray.prototype.getData=function(){var rv=\"\";for(var p=0;p<this.pages.length;p++){for(var i=0;i<ByteArray.pageSize;i++){rv+=ByteArray.charMap[this.pages[p][i]]}}return rv};ByteArray.prototype.writeByte=function(val){if(this.cursor>=ByteArray.pageSize)this.newPage();this.pages[this.page][this.cursor++]=val};ByteArray.prototype.writeUTFBytes=function(string){for(var l=string.length,i=0;i<l;i++)this.writeByte(string.charCodeAt(i))};ByteArray.prototype.writeBytes=function(array,offset,length){for(var l=length||array.length,i=offset||0;i<l;i++)this.writeByte(array[i])};function GIFEncoder(width,height){this.width=~~width;this.height=~~height;this.transparent=null;this.transIndex=0;this.repeat=-1;this.delay=0;this.image=null;this.pixels=null;this.indexedPixels=null;this.colorDepth=null;this.colorTab=null;this.neuQuant=null;this.usedEntry=new Array;this.palSize=7;this.dispose=-1;this.firstFrame=true;this.sample=10;this.dither=false;this.globalPalette=false;this.out=new ByteArray}GIFEncoder.prototype.setDelay=function(milliseconds){this.delay=Math.round(milliseconds/10)};GIFEncoder.prototype.setFrameRate=function(fps){this.delay=Math.round(100/fps)};GIFEncoder.prototype.setDispose=function(disposalCode){if(disposalCode>=0)this.dispose=disposalCode};GIFEncoder.prototype.setRepeat=function(repeat){this.repeat=repeat};GIFEncoder.prototype.setTransparent=function(color){this.transparent=color};GIFEncoder.prototype.addFrame=function(imageData){this.image=imageData;this.colorTab=this.globalPalette&&this.globalPalette.slice?this.globalPalette:null;this.getImagePixels();this.analyzePixels();if(this.globalPalette===true)this.globalPalette=this.colorTab;if(this.firstFrame){this.writeLSD();this.writePalette();if(this.repeat>=0){this.writeNetscapeExt()}}this.writeGraphicCtrlExt();this.writeImageDesc();if(!this.firstFrame&&!this.globalPalette)this.writePalette();this.writePixels();this.firstFrame=false};GIFEncoder.prototype.finish=function(){this.out.writeByte(59)};GIFEncoder.prototype.setQuality=function(quality){if(quality<1)quality=1;this.sample=quality};GIFEncoder.prototype.setDither=function(dither){if(dither===true)dither=\"FloydSteinberg\";this.dither=dither};GIFEncoder.prototype.setGlobalPalette=function(palette){this.globalPalette=palette};GIFEncoder.prototype.getGlobalPalette=function(){return this.globalPalette&&this.globalPalette.slice&&this.globalPalette.slice(0)||this.globalPalette};GIFEncoder.prototype.writeHeader=function(){this.out.writeUTFBytes(\"GIF89a\")};GIFEncoder.prototype.analyzePixels=function(){if(!this.colorTab){this.neuQuant=new NeuQuant(this.pixels,this.sample);this.neuQuant.buildColormap();this.colorTab=this.neuQuant.getColormap()}if(this.dither){this.ditherPixels(this.dither.replace(\"-serpentine\",\"\"),this.dither.match(/-serpentine/)!==null)}else{this.indexPixels()}this.pixels=null;this.colorDepth=8;this.palSize=7;if(this.transparent!==null){this.transIndex=this.findClosest(this.transparent,true)}};GIFEncoder.prototype.indexPixels=function(imgq){var nPix=this.pixels.length/3;this.indexedPixels=new Uint8Array(nPix);var k=0;for(var j=0;j<nPix;j++){var index=this.findClosestRGB(this.pixels[k++]&255,this.pixels[k++]&255,this.pixels[k++]&255);this.usedEntry[index]=true;this.indexedPixels[j]=index}};GIFEncoder.prototype.ditherPixels=function(kernel,serpentine){var kernels={FalseFloydSteinberg:[[3/8,1,0],[3/8,0,1],[2/8,1,1]],FloydSteinberg:[[7/16,1,0],[3/16,-1,1],[5/16,0,1],[1/16,1,1]],Stucki:[[8/42,1,0],[4/42,2,0],[2/42,-2,1],[4/42,-1,1],[8/42,0,1],[4/42,1,1],[2/42,2,1],[1/42,-2,2],[2/42,-1,2],[4/42,0,2],[2/42,1,2],[1/42,2,2]],Atkinson:[[1/8,1,0],[1/8,2,0],[1/8,-1,1],[1/8,0,1],[1/8,1,1],[1/8,0,2]]};if(!kernel||!kernels[kernel]){throw\"Unknown dithering kernel: \"+kernel}var ds=kernels[kernel];var index=0,height=this.height,width=this.width,data=this.pixels;var direction=serpentine?-1:1;this.indexedPixels=new Uint8Array(this.pixels.length/3);for(var y=0;y<height;y++){if(serpentine)direction=direction*-1;for(var x=direction==1?0:width-1,xend=direction==1?width:0;x!==xend;x+=direction){index=y*width+x;var idx=index*3;var r1=data[idx];var g1=data[idx+1];var b1=data[idx+2];idx=this.findClosestRGB(r1,g1,b1);this.usedEntry[idx]=true;this.indexedPixels[index]=idx;idx*=3;var r2=this.colorTab[idx];var g2=this.colorTab[idx+1];var b2=this.colorTab[idx+2];var er=r1-r2;var eg=g1-g2;var eb=b1-b2;for(var i=direction==1?0:ds.length-1,end=direction==1?ds.length:0;i!==end;i+=direction){var x1=ds[i][1];var y1=ds[i][2];if(x1+x>=0&&x1+x<width&&y1+y>=0&&y1+y<height){var d=ds[i][0];idx=index+x1+y1*width;idx*=3;data[idx]=Math.max(0,Math.min(255,data[idx]+er*d));data[idx+1]=Math.max(0,Math.min(255,data[idx+1]+eg*d));data[idx+2]=Math.max(0,Math.min(255,data[idx+2]+eb*d))}}}}};GIFEncoder.prototype.findClosest=function(c,used){return this.findClosestRGB((c&16711680)>>16,(c&65280)>>8,c&255,used)};GIFEncoder.prototype.findClosestRGB=function(r,g,b,used){if(this.colorTab===null)return-1;if(this.neuQuant&&!used){return this.neuQuant.lookupRGB(r,g,b)}var c=b|g<<8|r<<16;var minpos=0;var dmin=256*256*256;var len=this.colorTab.length;for(var i=0,index=0;i<len;index++){var dr=r-(this.colorTab[i++]&255);var dg=g-(this.colorTab[i++]&255);var db=b-(this.colorTab[i++]&255);var d=dr*dr+dg*dg+db*db;if((!used||this.usedEntry[index])&&d<dmin){dmin=d;minpos=index}}return minpos};GIFEncoder.prototype.getImagePixels=function(){var w=this.width;var h=this.height;this.pixels=new Uint8Array(w*h*3);var data=this.image;var srcPos=0;var count=0;for(var i=0;i<h;i++){for(var j=0;j<w;j++){this.pixels[count++]=data[srcPos++];this.pixels[count++]=data[srcPos++];this.pixels[count++]=data[srcPos++];srcPos++}}};GIFEncoder.prototype.writeGraphicCtrlExt=function(){this.out.writeByte(33);this.out.writeByte(249);this.out.writeByte(4);var transp,disp;if(this.transparent===null){transp=0;disp=0}else{transp=1;disp=2}if(this.dispose>=0){disp=this.dispose&7}disp<<=2;this.out.writeByte(0|disp|0|transp);this.writeShort(this.delay);this.out.writeByte(this.transIndex);this.out.writeByte(0)};GIFEncoder.prototype.writeImageDesc=function(){this.out.writeByte(44);this.writeShort(0);this.writeShort(0);this.writeShort(this.width);this.writeShort(this.height);if(this.firstFrame||this.globalPalette){this.out.writeByte(0)}else{this.out.writeByte(128|0|0|0|this.palSize)}};GIFEncoder.prototype.writeLSD=function(){this.writeShort(this.width);this.writeShort(this.height);this.out.writeByte(128|112|0|this.palSize);this.out.writeByte(0);this.out.writeByte(0)};GIFEncoder.prototype.writeNetscapeExt=function(){this.out.writeByte(33);this.out.writeByte(255);this.out.writeByte(11);this.out.writeUTFBytes(\"NETSCAPE2.0\");this.out.writeByte(3);this.out.writeByte(1);this.writeShort(this.repeat);this.out.writeByte(0)};GIFEncoder.prototype.writePalette=function(){this.out.writeBytes(this.colorTab);var n=3*256-this.colorTab.length;for(var i=0;i<n;i++)this.out.writeByte(0)};GIFEncoder.prototype.writeShort=function(pValue){this.out.writeByte(pValue&255);this.out.writeByte(pValue>>8&255)};GIFEncoder.prototype.writePixels=function(){var enc=new LZWEncoder(this.width,this.height,this.indexedPixels,this.colorDepth);enc.encode(this.out)};GIFEncoder.prototype.stream=function(){return this.out};module.exports=GIFEncoder},{\"./LZWEncoder.js\":2,\"./TypedNeuQuant.js\":3}],2:[function(require,module,exports){var EOF=-1;var BITS=12;var HSIZE=5003;var masks=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535];function LZWEncoder(width,height,pixels,colorDepth){var initCodeSize=Math.max(2,colorDepth);var accum=new Uint8Array(256);var htab=new Int32Array(HSIZE);var codetab=new Int32Array(HSIZE);var cur_accum,cur_bits=0;var a_count;var free_ent=0;var maxcode;var clear_flg=false;var g_init_bits,ClearCode,EOFCode;function char_out(c,outs){accum[a_count++]=c;if(a_count>=254)flush_char(outs)}function cl_block(outs){cl_hash(HSIZE);free_ent=ClearCode+2;clear_flg=true;output(ClearCode,outs)}function cl_hash(hsize){for(var i=0;i<hsize;++i)htab[i]=-1}function compress(init_bits,outs){var fcode,c,i,ent,disp,hsize_reg,hshift;g_init_bits=init_bits;clear_flg=false;n_bits=g_init_bits;maxcode=MAXCODE(n_bits);ClearCode=1<<init_bits-1;EOFCode=ClearCode+1;free_ent=ClearCode+2;a_count=0;ent=nextPixel();hshift=0;for(fcode=HSIZE;fcode<65536;fcode*=2)++hshift;hshift=8-hshift;hsize_reg=HSIZE;cl_hash(hsize_reg);output(ClearCode,outs);outer_loop:while((c=nextPixel())!=EOF){fcode=(c<<BITS)+ent;i=c<<hshift^ent;if(htab[i]===fcode){ent=codetab[i];continue}else if(htab[i]>=0){disp=hsize_reg-i;if(i===0)disp=1;do{if((i-=disp)<0)i+=hsize_reg;if(htab[i]===fcode){ent=codetab[i];continue outer_loop}}while(htab[i]>=0)}output(ent,outs);ent=c;if(free_ent<1<<BITS){codetab[i]=free_ent++;htab[i]=fcode}else{cl_block(outs)}}output(ent,outs);output(EOFCode,outs)}function encode(outs){outs.writeByte(initCodeSize);remaining=width*height;curPixel=0;compress(initCodeSize+1,outs);outs.writeByte(0)}function flush_char(outs){if(a_count>0){outs.writeByte(a_count);outs.writeBytes(accum,0,a_count);a_count=0}}function MAXCODE(n_bits){return(1<<n_bits)-1}function nextPixel(){if(remaining===0)return EOF;--remaining;var pix=pixels[curPixel++];return pix&255}function output(code,outs){cur_accum&=masks[cur_bits];if(cur_bits>0)cur_accum|=code<<cur_bits;else cur_accum=code;cur_bits+=n_bits;while(cur_bits>=8){char_out(cur_accum&255,outs);cur_accum>>=8;cur_bits-=8}if(free_ent>maxcode||clear_flg){if(clear_flg){maxcode=MAXCODE(n_bits=g_init_bits);clear_flg=false}else{++n_bits;if(n_bits==BITS)maxcode=1<<BITS;else maxcode=MAXCODE(n_bits)}}if(code==EOFCode){while(cur_bits>0){char_out(cur_accum&255,outs);cur_accum>>=8;cur_bits-=8}flush_char(outs)}}this.encode=encode}module.exports=LZWEncoder},{}],3:[function(require,module,exports){var ncycles=100;var netsize=256;var maxnetpos=netsize-1;var netbiasshift=4;var intbiasshift=16;var intbias=1<<intbiasshift;var gammashift=10;var gamma=1<<gammashift;var betashift=10;var beta=intbias>>betashift;var betagamma=intbias<<gammashift-betashift;var initrad=netsize>>3;var radiusbiasshift=6;var radiusbias=1<<radiusbiasshift;var initradius=initrad*radiusbias;var radiusdec=30;var alphabiasshift=10;var initalpha=1<<alphabiasshift;var alphadec;var radbiasshift=8;var radbias=1<<radbiasshift;var alpharadbshift=alphabiasshift+radbiasshift;var alpharadbias=1<<alpharadbshift;var prime1=499;var prime2=491;var prime3=487;var prime4=503;var minpicturebytes=3*prime4;function NeuQuant(pixels,samplefac){var network;var netindex;var bias;var freq;var radpower;function init(){network=[];netindex=new Int32Array(256);bias=new Int32Array(netsize);freq=new Int32Array(netsize);radpower=new Int32Array(netsize>>3);var i,v;for(i=0;i<netsize;i++){v=(i<<netbiasshift+8)/netsize;network[i]=new Float64Array([v,v,v,0]);freq[i]=intbias/netsize;bias[i]=0}}function unbiasnet(){for(var i=0;i<netsize;i++){network[i][0]>>=netbiasshift;network[i][1]>>=netbiasshift;network[i][2]>>=netbiasshift;network[i][3]=i}}function altersingle(alpha,i,b,g,r){network[i][0]-=alpha*(network[i][0]-b)/initalpha;network[i][1]-=alpha*(network[i][1]-g)/initalpha;network[i][2]-=alpha*(network[i][2]-r)/initalpha}function alterneigh(radius,i,b,g,r){var lo=Math.abs(i-radius);var hi=Math.min(i+radius,netsize);var j=i+1;var k=i-1;var m=1;var p,a;while(j<hi||k>lo){a=radpower[m++];if(j<hi){p=network[j++];p[0]-=a*(p[0]-b)/alpharadbias;p[1]-=a*(p[1]-g)/alpharadbias;p[2]-=a*(p[2]-r)/alpharadbias}if(k>lo){p=network[k--];p[0]-=a*(p[0]-b)/alpharadbias;p[1]-=a*(p[1]-g)/alpharadbias;p[2]-=a*(p[2]-r)/alpharadbias}}}function contest(b,g,r){var bestd=~(1<<31);var bestbiasd=bestd;var bestpos=-1;var bestbiaspos=bestpos;var i,n,dist,biasdist,betafreq;for(i=0;i<netsize;i++){n=network[i];dist=Math.abs(n[0]-b)+Math.abs(n[1]-g)+Math.abs(n[2]-r);if(dist<bestd){bestd=dist;bestpos=i}biasdist=dist-(bias[i]>>intbiasshift-netbiasshift);if(biasdist<bestbiasd){bestbiasd=biasdist;bestbiaspos=i}betafreq=freq[i]>>betashift;freq[i]-=betafreq;bias[i]+=betafreq<<gammashift}freq[bestpos]+=beta;bias[bestpos]-=betagamma;return bestbiaspos}function inxbuild(){var i,j,p,q,smallpos,smallval,previouscol=0,startpos=0;for(i=0;i<netsize;i++){p=network[i];smallpos=i;smallval=p[1];for(j=i+1;j<netsize;j++){q=network[j];if(q[1]<smallval){smallpos=j;smallval=q[1]}}q=network[smallpos];if(i!=smallpos){j=q[0];q[0]=p[0];p[0]=j;j=q[1];q[1]=p[1];p[1]=j;j=q[2];q[2]=p[2];p[2]=j;j=q[3];q[3]=p[3];p[3]=j}if(smallval!=previouscol){netindex[previouscol]=startpos+i>>1;for(j=previouscol+1;j<smallval;j++)netindex[j]=i;previouscol=smallval;startpos=i}}netindex[previouscol]=startpos+maxnetpos>>1;for(j=previouscol+1;j<256;j++)netindex[j]=maxnetpos}function inxsearch(b,g,r){var a,p,dist;var bestd=1e3;var best=-1;var i=netindex[g];var j=i-1;while(i<netsize||j>=0){if(i<netsize){p=network[i];dist=p[1]-g;if(dist>=bestd)i=netsize;else{i++;if(dist<0)dist=-dist;a=p[0]-b;if(a<0)a=-a;dist+=a;if(dist<bestd){a=p[2]-r;if(a<0)a=-a;dist+=a;if(dist<bestd){bestd=dist;best=p[3]}}}}if(j>=0){p=network[j];dist=g-p[1];if(dist>=bestd)j=-1;else{j--;if(dist<0)dist=-dist;a=p[0]-b;if(a<0)a=-a;dist+=a;if(dist<bestd){a=p[2]-r;if(a<0)a=-a;dist+=a;if(dist<bestd){bestd=dist;best=p[3]}}}}}return best}function learn(){var i;var lengthcount=pixels.length;var alphadec=30+(samplefac-1)/3;var samplepixels=lengthcount/(3*samplefac);var delta=~~(samplepixels/ncycles);var alpha=initalpha;var radius=initradius;var rad=radius>>radiusbiasshift;if(rad<=1)rad=0;for(i=0;i<rad;i++)radpower[i]=alpha*((rad*rad-i*i)*radbias/(rad*rad));var step;if(lengthcount<minpicturebytes){samplefac=1;step=3}else if(lengthcount%prime1!==0){step=3*prime1}else if(lengthcount%prime2!==0){step=3*prime2}else if(lengthcount%prime3!==0){step=3*prime3}else{step=3*prime4}var b,g,r,j;var pix=0;i=0;while(i<samplepixels){b=(pixels[pix]&255)<<netbiasshift;g=(pixels[pix+1]&255)<<netbiasshift;r=(pixels[pix+2]&255)<<netbiasshift;j=contest(b,g,r);altersingle(alpha,j,b,g,r);if(rad!==0)alterneigh(rad,j,b,g,r);pix+=step;if(pix>=lengthcount)pix-=lengthcount;i++;if(delta===0)delta=1;if(i%delta===0){alpha-=alpha/alphadec;radius-=radius/radiusdec;rad=radius>>radiusbiasshift;if(rad<=1)rad=0;for(j=0;j<rad;j++)radpower[j]=alpha*((rad*rad-j*j)*radbias/(rad*rad))}}}function buildColormap(){init();learn();unbiasnet();inxbuild()}this.buildColormap=buildColormap;function getColormap(){var map=[];var index=[];for(var i=0;i<netsize;i++)index[network[i][3]]=i;var k=0;for(var l=0;l<netsize;l++){var j=index[l];map[k++]=network[j][0];map[k++]=network[j][1];map[k++]=network[j][2]}return map}this.getColormap=getColormap;this.lookupRGB=inxsearch}module.exports=NeuQuant},{}],4:[function(require,module,exports){var GIFEncoder,renderFrame;GIFEncoder=require(\"./GIFEncoder.js\");renderFrame=function(frame){var encoder,page,stream,transfer;encoder=new GIFEncoder(frame.width,frame.height);if(frame.index===0){encoder.writeHeader()}else{encoder.firstFrame=false}encoder.setTransparent(frame.transparent);encoder.setDispose(frame.dispose);encoder.setRepeat(frame.repeat);encoder.setDelay(frame.delay);encoder.setQuality(frame.quality);encoder.setDither(frame.dither);encoder.setGlobalPalette(frame.globalPalette);encoder.addFrame(frame.data);if(frame.last){encoder.finish()}if(frame.globalPalette===true){frame.globalPalette=encoder.getGlobalPalette()}stream=encoder.stream();frame.data=stream.pages;frame.cursor=stream.cursor;frame.pageSize=stream.constructor.pageSize;if(frame.canTransfer){transfer=function(){var i,len,ref,results;ref=frame.data;results=[];for(i=0,len=ref.length;i<len;i++){page=ref[i];results.push(page.buffer)}return results}();return self.postMessage(frame,transfer)}else{return self.postMessage(frame)}};self.onmessage=function(event){return renderFrame(event.data)}},{\"./GIFEncoder.js\":1}]},{},[4]);\n//# sourceMappingURL=gif.worker.js.map\n"],{type:"application/javascript"})));const l=new gif({workers:4,quality:10,workerScript,background:s});const{fullPeriod:d}=e;const{beatDuration:c,slowdown:p}=r[_settings$7];const u=1e3/i;const h=_Mathround((d%2?2*d:d)*c*p/u);for(let n=0;n<h;n++)l.addFrame(o,{copy:!0,delay:u}),update(r,u);const m=new Promise((e,t)=>{try{l.on("finished",e),l.render()}catch(n){t(n)}});return m.then=function(e,t,n){return n&&l.on("progress",n),Promise.prototype.then.call(this,e,t)},m}var commonjsGlobal="undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?{}:self:global:window;var siteswap=createCommonjsModule(function(e){(function(t,n){e.exports=n()})(commonjsGlobal,function(){var _=String.fromCharCode;function Y(t){if(!$(t))throw new L("Invalid throws structure.");const n=t.map(e=>e.map(()=>0));for(let a=0;a<t.length;a++){const i=t[a];for(const s of i)for(const e of s)n[a][e.from]++,n[(a+e.value)%t.length][e.to]--}if(n.some(e=>e.some(e=>0!==e)))throw new L("Invalid siteswap.")}function $(e){if(!Array.isArray(e)||!e.length)return!1;for(const t of e){if(!Array.isArray(t)||t.length!==e[0].length)return!1;if(t.some(e=>!Array.isArray(e)||!e.every(({value:e,from:n,to:a})=>void 0!==e&&void 0!==n&&void 0!==a&&n<t.length&&a<t.length)))return!1}return!0}function Z(t,n){if(t.length!==n.length)return!1;for(let a=0;a<t.length;a++){const i=t[a],s=n[a];if(i.length!==s.length)return!1;for(let e=0;e<i.length;e++){const t=i[e],n=s[e];if(t.length!==n.length)return!1;for(let i=0;i<t.length;i++){const a=t[i],s=n[i];if(a.value!==s.value||a.from!==s.from||a.to!==s.to)return!1}}}return!0}function a(t){for(let n=1,e=z(t.length/2);n<=e;n++)if(0==t.length%n){const a=t.slice(0,n);for(let i=n;i<t.length;i+=n){const e=t.slice(i,i+n);if(!Z(a,e))break;if(n+i===t.length)return t.length=n,t}}return t}function X(t){const n=[];for(let e=0;e<t.degree;e++)n.push(Array(t.greatestValue).fill(0));if(0===t.greatestValue)return new M(n);const{throws:a}=t;let i=0;for(let s=-1;;s--){const e=a[(s%a.length+a.length)%a.length];for(const a of e)for(const e of a){const a=s+e.value;if(!(0>a)&&(n[e.to][a]++,i++,i===t.props)){let e=t.greatestValue;for(;n.every(t=>0===t[e-1]);)e--;for(let a=0;a<t.degree;a++)n[a].length=e;return new M(n)}}}}function d(e){const t=[],n=X(e);let a=n;do for(const n of e.throws)t.push(a.schedule),a=a.advance(n);while(n!==a);return t}function f(t){const n=[],a=e(t.states[0]);let s=a;do for(const e of t.throws)n.push(s),s=h(s,e);while(!i(a,s));return n}function e(e){let t=0;return e.map(e=>e.map(e=>Array(e).fill().map(()=>++t)))}function h(t,n){const a=t.map(e=>e.slice(1).map(e=>[...e]));for(let i=0;i<n.length;i++){const s=n[i];if(s.length||!s.every(({value:e,to:t,from:n})=>0===e&&t===i&&n===i))for(let e=0;e<s.length;e++){const n=s[e];if(0>=n.value)continue;const i=t[n.from][0][e];for(let i=0;i<a.length;i++)for(let s=t[0].length-1;s<n.value;s++)a[i][s]||(a[i][s]=[]);a[n.to][n.value-1].push(i)}}return a}function i(t,n){if(t.length!==n.length)return!1;for(let a=0;a<t.length;a++){const i=t[a],s=n[a];if(i.length!==s.length)return!1;for(let e=0;e<i.length;e++){const t=i[e],n=s[e];if(t.length!==n.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==n[e])return!1}}return!0}function j(t,n,a,i,s){const e=a[i][s];for(const r of e){if(0===r.value)continue;const s=(i+r.value)%a.length;n[s][r.to]===t||(n[s][r.to]=t,j(t,n,a,s,r.to))}}function g(t){if(0===t.greatestValue)return[t];const{throws:n,notation:i}=t,s=[],r=n.map(e=>e.map(()=>null));for(let e=0;e<n.length;e++){const t=n[e];for(let i=0;i<t.length;i++){const a=t[i];if(null===r[e][i]&&(1!==a.length||0!==a[0].value)){const t=[];j(t,r,n,e,i),s.push(t)}}}if(1===s.length)return[t];for(let e=0;e<n.length;e++){const t=n[e];for(const n of s)n.push(t.map((t,a)=>r[e][a]===n?t:[{value:0,from:a,to:a}]))}return s.map(e=>new Siteswap(e,i))}function l(t){const n=[],a=[...t.throws],i=[...t.states],{notation:s}=t;let e=0;for(let r=1;r<=i.length;r++)for(let o=r-1;o>=e;o--)if(i[r%i.length]===i[o]){if(0==o&&r===i.length)return n.length?(m(n,new Siteswap(a.slice(o,r),s)),n):[t];e==o?(m(n,new Siteswap(a.slice(o,r),s)),e=r):(m(n,new Siteswap(a.splice(o,r-o),s)),i.splice(o,r-o),r=e);break}return n}function m(e,t){e.every(e=>!e.equals(t))&&e.push(t)}function n(e){if("string"!=typeof e)throw new Error("Expected string.");const t=e.charCodeAt(0);if(65<=t&&90>=t)return 36+t-N.A;if(97<=t&&122>=t)return 10+t-N.a;throw new Error("Expected alphabetic letter in [a-Z] range.")}function o(e){if("number"!=typeof e)throw new Error("Expected number.");if(10<=e&&35>=e)return H(e+N.a-10);if(36<=e&&61>=e)return H(e+N.A-36);throw new Error("Expected number in [10-61] range.")}function p(e){if("string"!=typeof e)throw new Error("Expected string.");if(!/^[a-zA-Z]+$/.test(e))throw new Error("Expected alphabetic string.");return[...e].reduce((e,t,n,{length:a})=>e+(t.charCodeAt(0)-N.A+1)*26**(a-n-1),0)-1}function c(e){if("number"!=typeof e)throw new Error("Expected number.");if(0>e)throw new Error("Expected number in [0, \u221E) range.");e++;const t=[];for(;0<e;)t.push(H(N.A+(e-1)%26)),e=z((e-1)/26);return t.reverse().join("")}function r(e){return+e}function s(t,n){const a=I(t,n),i=_Mathmin(t,n);let s=a;for(;0!=s%i;)s+=a;return s}function t(e){return e.concat(e.map(e=>e.map(e=>[...e]).reverse()))}function u(e){for(const t of e)for(const e of t)for(let t=0;t<e.length;t++)e[t]={value:e[t],from:0,to:0};return e}function v(e){for(const t of e)for(let n=0;n<t.length;n++){const a=t[n];for(let t=0;t<a.length;t++){const{value:i,cross:s}=a[t];a[t]={value:i/2,from:n,to:s?1-n:n}}}return e}function w(e){const t=e.map(({length:e})=>e).reduce(s),n=[];for(let i=0;i<t;i++){const t=e.map(e=>e[i%e.length]).map((e,t)=>e.map(({value:n,hand:a,offset:i})=>{const s=void 0===i?a:t+i;return{value:n,from:t,to:s}}));n.push(t)}return n}function x(e){const t=e.map(({length:e})=>e).reduce(s),n=[];for(let i=0;i<t;i++){const t=e.map(e=>e[i%e.length][0]).map((e,t)=>e.map(({value:e,pass:n})=>{!0===n&&(n=2-t);const a=null===n?t:n-1;return{value:e,from:t,to:a}}));n.push(t)}return n}function y(e){const t=e.map(({length:e})=>e).reduce(s),n=[];for(let i=0;i<t;i++){const t=Array.prototype.concat(...e.map(e=>e[i%e.length])).map((e,t)=>e.map(({value:n,pass:a,cross:i})=>{!0===a&&(a=2-z(t/2));const s=(null===a?t:2*(a-1)+t%2)+(i?t%2?-1:1:0);return{value:n/2,from:t,to:s}}));n.push(t)}return n}function k(e,t=null){if(null===t){const t={};return t.immutables=[],t.terminals=new Set,e=k(e,t),e.immutables=t.immutables,e.terminals=[...t.terminals],e}if(null===e)return e;if("string"==typeof e){if(!R[e])throw new Error("Parsing error.");return k(R[e],t)}if(Array.isArray(e))return{symbols:e.map(e=>k(e,t))};if(e.fixed&&!e.value&&t.immutables.push(e),e.tokenType)return t.terminals.add(e),e;if("object"!=typeof e)throw new Error("Parsing error.");if(e.symbol)e.symbol=k(e.symbol,t);else if(e.symbols)e.symbols=e.symbols.map(e=>k(e,t));else if(e.repeat)e.repeat=e.repeat.map(e=>k(e,t));else if(e.either)e.either=e.either.map(e=>k(e,t));else if(e.allow)e.either=[k(e.allow,t),null],delete e.allow;else throw new Error("Parsing error.");return e}function A(t,n){const a=new RegExp(t.sort((e,t)=>e.index-t.index).map(({regex:e})=>`(${e})`).join("|"),"y"),i=[];for(;a.lastIndex<n.length;){const s=a.exec(n);if(null===s)return null;const e=s.findIndex((e,t)=>t&&e);i.push({type:t[e-1].tokenType,value:s[e]})}return i}function B(t){let e;if(null===t)return null;if(t.tokenType){const n=T[J];if(!n||n.type!==t.tokenType)return S;if(t.fixed)if(!t.value)t.value=n.value;else if(n.value!==t.value)return S;e=n.value,J++}else if(t.symbol){if(e=B(t.symbol),e===S)return S;}else if(t.symbols){e=[];for(const n of t.symbols){const t=B(n);if(t===S)return S;e.push(t)}}else if(t.repeat){for(e=[];e.length<t.max;){const n=J,a=B({symbols:t.repeat});if(a===S){J=n;break}e.push(a)}if(e.length<t.min||e.length>t.max)return S}else if(t.either){for(const n of t.either){const a=J,i=B(n);if(i===S){J=a;continue}const{processor:s}=t;if(t.fixed)if(void 0===t.value)t.value=n;else if(n!==t.value)return S;return s?s(i):i}return S}return t.processor?t.processor(e):e}function b(e,t){if(!e||!R[e])throw new Error("Parsing error.");"function"==typeof R[e]&&(R[e]=k(R[e]()));const n=R[e];for(const a of n.immutables)delete a.value;if(J=0,T=A(n.terminals,t),!T||!T.length)return null;const a=B(n);return a===S||J!==T.length?null:a}function C(e){const t=e.map(({value:t,from:n,to:a})=>{const i=n%2==a%2?"":"x",s=a===n||a===n+(n%2?-1:1)?"":`p${z(a/2)+1}`;return`${2*t}${i}${s}`}).join(",");return 1<e.length?`[${t}]`:t}function E(e,t){if(t=t.reduce((e,t)=>e.concat(Array.isArray(ee[t])?ee[t]:t),[]),"object"==typeof e){const[n]=t;if(("string"!=typeof n||!ee[n])&&null!==n)throw new L("Unsupported notation.");return{notation:n,throws:e}}if(t.some(e=>"string"!=typeof e||!ee[e]))throw new L("Unsupported notation.");for(const n of t){const t=ee[n].parse(e);if(t)return{notation:n,throws:t}}throw new L("Invalid syntax.")}function D(e){return e.every(e=>e.every((e,t,{length:n})=>1===e||0===e&&t===n-1))}function G(t,n,a){for(let i=0;i<t.length;i++){const s=(i+a)%t.length;if(t[s].length!==n[i].length)return!1;for(let e=0;e<t[s].length;e++){if(t[s][e].length!==n[i][e].length)return!1;for(let a=0;a<t[s][e].length;a++){const r=t[s][e][a],o=n[i][e][a];if(r.value!==o.value||r.from!==o.from||r.to!==o.to)return!1}}}return!0}function F(e,t){return"string"!=typeof e&&(e=e.toString()),t++,e.length>=t?e:`${Array(t-e.length).join(" ")}${e}`}var I=_Mathmax,H=_,z=_Mathfloor;class L extends Error{}L.prototype.name="SiteswapError";const q={schedules:new Map,strings:new Map};class M{constructor(e){if(!Array.isArray(e)||!e.every(Array.isArray))throw new Error("Invalid schedule.");let t=q.schedules.get(e);if(t)return t;const n=e.map(e=>e.join(",")).join("-");return t=q.strings.get(n),t?t:void(q.schedules.set(e,this),q.strings.set(n,this),this.schedule=e)}advance(e){const t=this.schedule.map(e=>e.slice(1));for(let n=0;n<e.length;n++){const i=e[n];if(i.filter(({value:e})=>e).length!==(this.schedule[n][0]||0))throw new Error("Invalid action.");if(i.length)for(const{value:e,to:n}of i)if(!(0>=e)){t[n][e-1]=(t[n][e-1]||0)+1;for(let n=0;n<t.length;n++)for(let a=this.schedule[0].length-1;a<e;a++)t[n][a]||(t[n][a]=0)}}return new M(t)}}const N={a:97,A:65};let O=!0;const K={ws(){return{allow:" "}},trim(e){const t=K.ws();return{symbols:[t,e,t],processor:([,e])=>e}},separator(){if(O){const e=K.ws();return{either:[{symbols:[e,",",e]}," "],fixed:!0}}return{either:[","," "],fixed:!0}},separated(e,t,n){return{symbols:[n,{repeat:[e,n],min:t-1,max:1/0}],processor:([e,[...t]])=>[e,...t.map(([,e])=>e)]}},release(e,t){const n=K.separated(t,2,e);return{either:[{symbols:[e]},{symbols:["[",O?K.trim(n):n,"]"],processor:([,e])=>e}]}},asyncSiteswap(e,t){return{symbol:K.separated(t,1,K.release(e,t)),processor:e=>e.map(e=>[e])}},syncSiteswap(n,a,i){const s=K.ws(),r=K.release(n,a);return O?{symbols:[K.separated(s,1,{symbols:["(",s,r,i,r,s,")"],processor:([,,e,,t])=>[e,t]}),s,{allow:"*"}],processor:([e,,n])=>n?t(e):e}:{symbols:[K.separated(null,1,{symbols:["(",r,i,r,")"],processor:([,e,,t])=>[e,t]}),{allow:"*"}],processor:([e,n])=>n?t(e):e}}},Q=[{tokenType:"[",regex:"\\["},{tokenType:"]",regex:"\\]"},{tokenType:"(",regex:"\\("},{tokenType:")",regex:"\\)"},{tokenType:"<",regex:"<"},{tokenType:">",regex:">"},{tokenType:"\n",regex:"\n"},{tokenType:"|",regex:"\\|"},{tokenType:"-",regex:"-"},{tokenType:",",regex:","},{tokenType:" ",regex:" +"},{tokenType:"*",regex:"\\*"},{tokenType:"x",regex:"x",processor:()=>!0},{tokenType:"pN",regex:"p(?:[1-9][0-9]*|0)",processor:e=>r(e.slice(1))},{tokenType:"p",regex:"p",processor:()=>!0},{tokenType:"digit",regex:"[0-9]",processor:r},{tokenType:"digit_even",regex:"[02468]",processor:r},{tokenType:"letter",regex:"[a-zA-Z]",processor:n},{tokenType:"letter_even",regex:"[acegikmoqsuwyACEGIKMOQSUWY]",processor:n},{tokenType:"letter_capital",regex:"[A-Z]"},{tokenType:"integer",regex:"[1-9][0-9]*|[0-9]",processor:r},{tokenType:"integer_even",regex:"[1-9][0-9]*[02468]|[02468]",processor:r}],R={standard_async:()=>(O=!0,{symbol:K.trim(K.asyncSiteswap("integer",K.separator())),processor:u}),compressed_async:()=>(O=!1,{symbol:K.trim(K.asyncSiteswap({either:["digit","letter"]},null)),processor:u}),standard_sync:()=>{O=!0;const e=K.separator();return{symbol:K.trim(K.syncSiteswap({symbols:["integer_even",{allow:"x"}],processor:([e,t])=>({value:e,cross:!!t})},e,e)),processor:v}},compressed_sync:()=>{O=!1;const e={allow:K.separator(),fixed:!0};return{symbol:K.trim(K.syncSiteswap({symbols:[{either:["digit_even","letter_even"]},{allow:"x"}],processor:([e,t])=>({value:e,cross:!!t})},null,e)),processor:v}},multihand:()=>{O=!0;const e=K.ws(),t=K.trim(","),n=K.trim("\n");return{symbol:K.trim({either:[K.separated(n,1,K.separated(t,1,K.release({symbols:[{either:[{symbols:[{repeat:[{symbol:"letter_capital",fixed:!0,value:"A"}],min:1,max:1/0},{allow:["letter_capital"]}],processor:([e,t])=>t?[...e,t].join(""):e.join("")},"letter_capital"],processor:p},"integer"],processor:([e,t])=>({value:t,hand:e})},t))),K.separated(n,1,K.separated(e,1,K.release({symbols:["(",e,{allow:"-"},"integer",e,",",e,"integer",e,")"],processor:([,,e,t,,,,n])=>({value:n,offset:e?-t:t})},e)))]}),processor:w}},passing_async:()=>{O=!0;const e=K.trim(K.asyncSiteswap({symbols:["integer",{allow:"p"}],processor:([e,t])=>({value:e,pass:t})},K.separator())),t=K.trim(K.asyncSiteswap({symbols:["integer",{allow:"pN"}],processor:([e,t])=>({value:e,pass:t})},K.separator()));return{symbol:K.trim({either:[{symbols:["<",e,"|",e,">"],processor:([,e,,t])=>[e,t]},{symbols:["<",K.separated("|",2,t),">"],processor:([,e])=>e}]}),processor:x}},passing_sync:()=>{O=!0;const t=K.separator(),n=K.separator(),a=K.separator(),i=K.separator(),s=K.trim({either:[K.syncSiteswap({symbols:["integer_even",{allow:"x"},{allow:"p"}],processor:([e,t,n])=>({value:e,pass:n,cross:t})},t,t),K.syncSiteswap({symbols:["integer_even",{allow:"p"},{allow:"x"}],processor:([e,t,n])=>({value:e,pass:t,cross:n})},n,n)]}),e=K.trim({either:[K.syncSiteswap({symbols:["integer_even",{allow:"x"},{allow:"pN"}],processor:([e,t,n])=>({value:e,pass:n,cross:t})},a,a),K.syncSiteswap({symbols:["integer_even",{allow:"pN"},{allow:"x"}],processor:([e,t,n])=>({value:e,pass:t,cross:n})},i,i)]});return{symbol:K.trim({either:[{symbols:["<",s,"|",s,">"],processor:([,e,,t])=>[e,t]},{symbols:["<",K.separated("|",2,e),">"],processor:([,e])=>e}]}),processor:y}}};for(let e=0;e<Q.length;e++){const t=Q[e];t.index=e,R[t.tokenType]=t}const S={ERROR:!0};let T,J=0;const ee={"standard:async":{limits:{degree:{min:1,max:1}},hands:()=>["Hand"],parse:e=>b("standard_async",e),unparse:function(e){return e.map(([e])=>{const t=e.map(({value:e})=>e).join(",");return 1<e.length?`[${t}]`:t}).join(",")}},"standard:sync":{limits:{degree:{min:2,max:2}},hands:()=>["Left","Right"],parse:e=>b("standard_sync",e),unparse:function(e){return e.map(e=>{const t=e.map(e=>{const t=e.map(({value:e,from:t,to:n})=>`${2*e}${t===n?"":"x"}`).join(",");return 1<e.length?`[${t}]`:t});return`(${t})`}).join("")}},standard:["standard:async","standard:sync"],"compressed:async":{limits:{degree:{min:1,max:1},greatestValue:{max:61}},hands:()=>["Hand"],parse:e=>b("compressed_async",e),unparse:function(e){return e.map(([e])=>{const t=e.map(({value:e})=>9<e?o(e):e).join("");return 1<e.length?`[${t}]`:t}).join("")}},"compressed:sync":{limits:{degree:{min:2,max:2},greatestValue:{max:30}},hands:()=>["Left","Right"],parse:e=>b("compressed_sync",e),unparse:function(e){return e.map(e=>{const t=e.map(e=>{const t=e.map(({value:e,from:t,to:n})=>(e*=2,`${9<e?o(e):e}${t===n?"":"x"}`)).join("");return 1<e.length?`[${t}]`:t});return`(${t})`}).join("")}},compressed:["compressed:async","compressed:sync"],"passing:async":{limits:{degree:{min:2}},hands:e=>Array(e).fill().map((e,t)=>`juggler ${t+1}`),parse:e=>b("passing_async",e),unparse:function(e){const t=e[0].map((t,n)=>e.map(e=>{const t=e[n],a=t.map(({value:e,from:t,to:n})=>`${e}${t===n?"":`p${n+1}`}`).join(",");return 1<t.length?`[${a}]`:a}).join(",")).join("|");return`<${t}>`}},"passing:sync":{limits:{degree:{min:4,step:2}},hands:e=>Array(e).fill().map((e,t)=>`juggler ${z(t/2)+1}, hand ${t%2+1}`),parse:e=>b("passing_sync",e),unparse:function(e){const t=[];for(let n=0,[{length:a}]=e;n<a;n+=2)t.push(e.map(e=>`(${C(e[n])},${C(e[n+1])})`).join(""));return`<${t.join("|")}>`}},passing:["passing:async","passing:sync"],multihand:{hands:e=>Array(e).fill().map((e,t)=>c(t)),parse:e=>b("multihand",e),unparse:function(e){return e[0].map((t,n)=>e.map(e=>{const t=e[n],a=t.map(({value:e,to:t})=>`${c(t)}${e}`).join(",");return 1===t.length?a:`[${a}]`}).join(",")).join("\n")}}};class Siteswap{constructor(t,n="compressed"){try{const{throws:i,notation:e}=E(t,[].concat(n));Y(i),this.valid=!0,this.notation=e,this.throws=a(i)}catch(e){if(!(e instanceof L))throw e;return this.valid=!1,this.input=[t,n],this.error=e.message,this}const{throws:i}=this,e=i.reduce((e,t)=>e.concat(...t.map(e=>e.map(({value:e})=>e))),[]);this.degree=i[0].length,this.props=e.reduce((e,t)=>e+t)/i.length,this.multiplex=i.reduce((e,t)=>I(e,...t.map(({length:e})=>e)),0),this.greatestValue=I(...e),this.states=d(this),this.strictStates=f(this),this.orbits=g(this),this.composition=l(this),this.period=this.states.length,this.fullPeriod=this.strictStates.length,this.prime=1===this.composition.length,this.groundState=this.states.some(D)}}return Siteswap.prototype.equals=function(e){if(!this.valid)throw new L("Invalid siteswap.");if(!(e instanceof Siteswap)||!e.valid)return!1;const t=this.throws,n=e.throws;if(t.length!==n.length)return!1;for(let a=0;a<t.length;a++)if(G(t,n,a))return!0;return!1},Siteswap.prototype.rotate=function(e=1){if(!this.valid)throw new L("Invalid siteswap.");const{throws:t}=this;return 0>e&&(e=t.length+e%t.length),new Siteswap(t.map((n,a)=>t[(a+e)%t.length]),this.notation)},Siteswap.prototype.toString=function(e=this.notation){if(!this.valid)throw new L("Invalid siteswap.");if(null===e)return JSON.stringify(this.throws);if(!ee[e]||Array.isArray(ee[e]))throw new L("Unsupported notation.");if(this.notation!==e){const t=ee[this.notation].limits||{},n=ee[e].limits||{},a=Object.keys(n);if(a.some(e=>void 0!==n[e]&&void 0!==t[e]&&(void 0!==n[e].min&&void 0!==t[e].max&&n[e].min>t[e].max||void 0!==n[e].max&&void 0!==t[e].min&&n[e].max<t[e].min)))throw new L("Incompatible notations.");if(a.some(e=>n[e].max&&this[e]>n[e].max||n[e].min&&this[e]<n[e].min||0!=this[e]%(n[e].step||1)))throw new L("This siteswap can't be converted to the target notation.")}return ee[e].unparse(this.throws)},Siteswap.prototype.log=function(){if(!this.valid)return void console.log("Invalid siteswap.");const t=[];let n;if(t.push(`siteswap\n ${this.toString().replace(/\n/g,"\n ")}`),t.push(`notation\n ${this.notation}`),t.push(`degree\n ${this.degree}`),t.push(`props\n ${this.props}`),t.push(`period\n ${this.period}`),t.push(`full period\n ${this.fullPeriod}`),t.push(`multiplex\n ${this.multiplex}`),t.push(`prime\n ${this.prime}`),t.push(`ground state\n ${this.groundState}`),2<this.degree){n=Array(this.degree).fill().map((e,t)=>c(t)),t.push("hand labels");const a=ee[this.notation].hands(this.degree),i=[];i.push(this.degree.toString().length+1),i.push(I(...a.map(({length:e})=>e))),i.push(I(...n.map(({length:e})=>e)));for(let s=0;s<this.degree;s++){const e=F(s+1,i[0]),r=F(n[s],i[2]),o=F(a[s],i[1]);t.push(`${e}| ${r}${"multihand"===this.notation?"":` (${o})`}`)}}{t.push("throw sequence");const i=[];for(const[t,a]of this.throws.entries()){const s=a.map(e=>{let t;return t=2>=this.degree?e.map(({value:e,from:t,to:n})=>`${e}${t===n?"":"x"}`).join(","):e.map(({value:e,to:t})=>`${e}${n[t]}`).join(","),1===e.length?t:`[${t}]`});i.push([`${t+1}|`,...s])}const e=[];for(let t=0;t<i[0].length;t++)e.push(I(...i.map(e=>e[t].length+1)));t.push(...i.map(t=>t.map((t,n)=>F(t,e[n])).join("")))}{t.push("states");const n=this.period.toString().length+1;for(const[a,i]of this.states.entries())for(const[s,e]of i.entries())t.push(`${F(s?" ":a+1,n)}| [${e.join(",")}]`)}{t.push("strict states");const n=this.fullPeriod.toString().length+1;for(const[a,i]of this.strictStates.entries())for(const[s,e]of i.entries())t.push(`${F(s?"":a+1,n)}| [${e.map(e=>`[${e.length?e.join(","):"-"}]`).join(",")}]`)}{t.push("orbits");const e=this.orbits.length.toString().length+1;for(const[n,a]of this.orbits.entries())t.push(...a.toString().split("\n").map((t,a)=>`${F(a?"":n+1,e)}| ${t}`))}{t.push("composition");const e=this.composition.length.toString().length+1;for(const[n,a]of this.composition.entries())t.push(...a.toString().split("\n").map((t,a)=>`${F(a?"":n+1,e)}| ${t}`))}t.push(" "),console.log(t.join("\n"))},Siteswap})});const _settings=Symbol.for("settings");class Loop{constructor(e){this.callback=e,this.update=this.update.bind(this),this.request=window.requestAnimationFrame(this.update),this.timestamp=null}update(e){const t=this.timestamp?e-this.timestamp:0;this.timestamp=e,this.request=window.requestAnimationFrame(this.update),this.callback(t)}kill(){window.cancelAnimationFrame(this.request)}}var webmidi_cjs_min=createCommonjsModule(function(module,exports){var _NumberisInteger=Number.isInteger;Object.defineProperty(exports,"__esModule",{value:!0});class EventEmitter{constructor(t=!1){this.eventMap={},this.eventsSuspended=1==t}addListener(a,e,t={}){if("string"==typeof a&&1>a.length||a instanceof String&&1>a.length||"string"!=typeof a&&!(a instanceof String)&&a!==EventEmitter.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if("function"!=typeof e)throw new TypeError("The callback must be a function.");const n=new Listener(a,this,e,t);return this.eventMap[a]||(this.eventMap[a]=[]),t.prepend?this.eventMap[a].unshift(n):this.eventMap[a].push(n),n}addOneTimeListener(a,e,t={}){t.remaining=1,this.addListener(a,e,t)}static get ANY_EVENT(){return Symbol.for("Any event")}hasListener(n,a){return void 0===n?!!(this.eventMap[EventEmitter.ANY_EVENT]&&0<this.eventMap[EventEmitter.ANY_EVENT].length)||Object.entries(this.eventMap).some(([,t])=>0<t.length):!!(this.eventMap[n]&&0<this.eventMap[n].length)&&(a instanceof Listener?0<this.eventMap[n].filter(t=>t===a).length:"function"==typeof a?0<this.eventMap[n].filter(t=>t.callback===a).length:null==a)}get eventNames(){return Object.keys(this.eventMap)}getListeners(t){return this.eventMap[t]||[]}suspendEvent(t){this.getListeners(t).forEach(t=>{t.suspended=!0})}unsuspendEvent(t){this.getListeners(t).forEach(t=>{t.suspended=!1})}getListenerCount(t){return this.getListeners(t).length}emit(a,...i){if("string"!=typeof a&&!(a instanceof String))throw new TypeError("The 'event' parameter must be a string.");if(this.eventsSuspended)return;let t=[],e=this.eventMap[EventEmitter.ANY_EVENT]||[];return this.eventMap[a]&&(e=e.concat(this.eventMap[a])),e.forEach(n=>{if(n.suspended)return;let e=[...i];Array.isArray(n.arguments)&&(e=e.concat(n.arguments)),0<n.remaining&&(t.push(n.callback.apply(n.context,e)),n.count++),1>--n.remaining&&n.remove()}),t}removeListener(a,i,t={}){if(void 0===a)return void(this.eventMap={});if(this.eventMap[a]){let e=this.eventMap[a].filter(n=>i&&n.callback!==i||t.remaining&&t.remaining!==n.remaining||t.context&&t.context!==n.context);e.length?this.eventMap[a]=e:delete this.eventMap[a]}}async waitFor(a,e={}){return e.duration=parseInt(e.duration),(isNaN(e.duration)||0>=e.duration)&&(e.duration=1/0),new Promise((t,n)=>{let s,o=this.addListener(a,()=>{clearTimeout(s),t()},{remaining:1});e.duration!==1/0&&(s=setTimeout(()=>{o.remove(),n("The duration expired before the event was emitted.")},e.duration))})}get eventCount(){return Object.keys(this.eventMap).length}}class Listener{constructor(a,e,t,n={}){if("string"!=typeof a&&!(a instanceof String)&&a!==EventEmitter.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(!e)throw new ReferenceError("The 'target' parameter is mandatory.");if("function"!=typeof t)throw new TypeError("The 'callback' must be a function.");void 0===n.arguments||Array.isArray(n.arguments)||(n.arguments=[n.arguments]),(n=Object.assign({context:e,remaining:1/0,arguments:void 0,duration:1/0},n)).duration!==1/0&&setTimeout(()=>this.remove(),n.duration),this.arguments=n.arguments,this.callback=t,this.context=n.context,this.count=0,this.event=a,this.remaining=1<=parseInt(n.remaining)?parseInt(n.remaining):1/0,this.suspended=!1,this.target=e}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining})}}/**
	 * The `Enumerations` class contains enumerations and arrays of elements used throughout the
	 * library. All properties are static and should be referenced using the class name. For example:
	 * `Enumerations.MIDI_CHANNEL_MESSAGES`.
	 *
	 * @license Apache-2.0
	 * @since 3.0.0
	 */class Enumerations{static get MIDI_CHANNEL_MESSAGES(){return{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,programchange:12,channelaftertouch:13,pitchbend:14}}static get MIDI_CHANNEL_NUMBERS(){return[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}static get MIDI_CHANNEL_MODE_MESSAGES(){return{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get MIDI_CONTROL_CHANGE_MESSAGES(){return{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,controller3:3,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,controller9:9,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,controller14:14,controller15:15,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,controller20:20,controller21:21,controller22:22,controller23:23,controller24:24,controller25:25,controller26:26,controller27:27,controller28:28,controller29:29,controller30:30,controller31:31,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,controller35:35,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,controller41:41,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,controller46:46,controller47:47,controller48:48,controller49:49,controller50:50,controller51:51,controller52:52,controller53:53,controller54:54,controller55:55,controller56:56,controller57:57,controller58:58,controller59:59,controller60:60,controller61:61,controller62:62,controller63:63,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,controller84:84,controller85:85,controller86:86,controller87:87,controller88:88,controller89:89,controller90:90,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101,controller102:102,controller103:103,controller104:104,controller105:105,controller106:106,controller107:107,controller108:108,controller109:109,controller110:110,controller111:111,controller112:112,controller113:113,controller114:114,controller115:115,controller116:116,controller117:117,controller118:118,controller119:119,allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get MIDI_REGISTERED_PARAMETERS(){return{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]}}static get MIDI_SYSTEM_MESSAGES(){return{sysex:240,timecode:241,songposition:242,songselect:243,tunerequest:246,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1}}static get CHANNEL_EVENTS(){return["noteoff","controlchange","noteon","keyaftertouch","programchange","channelaftertouch","pitchbend","allnotesoff","allsoundoff","localcontrol","monomode","omnimode","resetallcontrollers","nrpn","nrpn-dataentrycoarse","nrpn-dataentryfine","nrpn-databuttonincrement","nrpn-databuttondecrement","rpn","rpn-dataentrycoarse","rpn-dataentryfine","rpn-databuttonincrement","rpn-databuttondecrement"]}}/**
	 * The `Note` class represents a single musical note such as `"D3"`, `"G#4"`, `"F-1"`, `"Gb7"`, etc.
	 *
	 * `Note` objects can be played back on a single channel by calling
	 * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same
	 * output, by calling [`Output.playNote()`]{@link Output#playNote}.
	 *
	 * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.
	 * These can be changed by passing in the appropriate option. It is also possible to set a
	 * system-wide default for attack and release velocities by using the
	 * [`WebMidi.defaults`](WebMidi#defaults) property.
	 *
	 * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and
	 * [`rawRelease`](#rawRelease) to both get and set the values.
	 *
	 * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped
	 * when the duration has elapsed by sending a `"noteoff"` event. By default, the duration is set to
	 * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a
	 * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},
	 * [`Output.stopNote()`]{@link Output#stopNote} or similar.
	 *
	 * @license Apache-2.0
	 * @since 3.0.0
	 */class Note{constructor(n,e={}){this.duration=wm.defaults.note.duration,this.attack=wm.defaults.note.attack,this.release=wm.defaults.note.release,null!=e.duration&&(this.duration=e.duration),null!=e.attack&&(this.attack=e.attack),null!=e.rawAttack&&(this.attack=Utilities.from7bitToFloat(e.rawAttack)),null!=e.release&&(this.release=e.release),null!=e.rawRelease&&(this.release=Utilities.from7bitToFloat(e.rawRelease)),this.identifier=_NumberisInteger(n)?Utilities.toNoteIdentifier(n):n}get identifier(){return this._name+(this._accidental||"")+this._octave}set identifier(n){const e=Utilities.getNoteDetails(n);if(wm.validation&&!n)throw new Error("Invalid note identifier");this._name=e.name,this._accidental=e.accidental,this._octave=e.octave}get name(){return this._name}set name(t){if(wm.validation&&(t=t.toUpperCase(),!["C","D","E","F","G","A","B"].includes(t)))throw new Error("Invalid name value");this._name=t}get accidental(){return this._accidental}set accidental(t){if(wm.validation&&(t=t.toLowerCase(),!["#","##","b","bb"].includes(t)))throw new Error("Invalid accidental value");this._accidental=t}get octave(){return this._octave}set octave(t){if(wm.validation&&(t=parseInt(t),isNaN(t)))throw new Error("Invalid octave value");this._octave=t}get duration(){return this._duration}set duration(t){if(wm.validation&&(t=parseFloat(t),isNaN(t)||null===t||0>t))throw new RangeError("Invalid duration value.");this._duration=t}get attack(){return this._attack}set attack(t){if(wm.validation&&(t=parseFloat(t),isNaN(t)||!(0<=t&&1>=t)))throw new RangeError("Invalid attack value.");this._attack=t}get release(){return this._release}set release(t){if(wm.validation&&(t=parseFloat(t),isNaN(t)||!(0<=t&&1>=t)))throw new RangeError("Invalid release value.");this._release=t}get rawAttack(){return Utilities.fromFloatTo7Bit(this._attack)}set rawAttack(t){this._attack=Utilities.from7bitToFloat(t)}get rawRelease(){return Utilities.fromFloatTo7Bit(this._release)}set rawRelease(t){this._release=Utilities.from7bitToFloat(t)}get number(){return Utilities.toNoteNumber(this.identifier)}getOffsetNumber(n=0,a=0){return wm.validation&&(n=parseInt(n)||0,a=parseInt(a)||0),_Mathmin(_Mathmax(this.number+12*n+a,0),127)}}/**
	 * The `Utilities` class contains general-purpose utility methods. All methods are static and
	 * should be called using the class name. For example: `Utilities.getNoteDetails("C4")`.
	 *
	 * @license Apache-2.0
	 * @since 3.0.0
	 */class Utilities{/**
	   * Returns a MIDI note number matching the identifier passed in the form of a string. The
	   * identifier must include the octave number. The identifier also optionally include a sharp (#),
	   * a double sharp (##), a flat (b) or a double flat (bb) symbol. For example, these are all valid
	   * identifiers: C5, G4, D#-1, F0, Gb7, Eb-1, Abb4, B##6, etc.
	   *
	   * When converting note identifiers to numbers, C4 is considered to be middle C (MIDI note number
	   * 60) as per the scientific pitch notation standard.
	   *
	   * The resulting note number can be offset by using the `octaveOffset` parameter.
	   *
	   * @param identifier {string} The identifier in the form of a letter, followed by an optional "#",
	   * "##", "b" or "bb" followed by the octave number. For exemple: C5, G4, D#-1, F0, Gb7, Eb-1,
	   * Abb4, B##6, etc.
	   *
	   * @param {number} [octaveOffset=0] A integer to offset the octave by.
	   *
	   * @returns {number} The MIDI note number (an integer between 0 and 127).
	   *
	   * @throws RangeError Invalid 'octaveOffset' value
	   *
	   * @throws TypeError Invalid note identifier
	   *
	   * @license Apache-2.0
	   * @since 3.0.0
	   * @static
	   */static toNoteNumber(a,i=0){if(i=null==i?0:parseInt(i),isNaN(i))throw new RangeError("Invalid 'octaveOffset' value");"string"!=typeof a&&(a="");const r=this.getNoteDetails(a);if(!r)throw new TypeError("Invalid note identifier");let n=12*(r.octave+1+i);if(n+={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[r.name],r.accidental&&(r.accidental.startsWith("b")?n-=r.accidental.length:n+=r.accidental.length),0>n||127<n)throw new RangeError("Invalid octaveOffset value");return n}static getNoteDetails(a){_NumberisInteger(a)&&(a=this.toNoteIdentifier(a));const i=a.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)$/i);if(!i)throw new TypeError("Invalid note identifier");const t=i[1].toUpperCase(),n=parseInt(i[3]);let s=i[2].toLowerCase();return s=""===s?void 0:s,{accidental:s,identifier:t+(s||"")+n,name:t,octave:n}}static sanitizeChannels(n){let e;if(this.validation)if("all"===n)e=["all"];else if("none"===n)return[];return e=Array.isArray(n)?n:[n],-1<e.indexOf("all")&&(e=Enumerations.MIDI_CHANNEL_NUMBERS),e.map(function(t){return parseInt(t)}).filter(function(t){return 1<=t&&16>=t})}static toTimestamp(a){let e=!1;const i=parseFloat(a);return!isNaN(i)&&("string"==typeof a&&"+"===a.substring(0,1)?0<=i&&(e=wm.time+i):0<=i&&(e=i),e)}static guessNoteNumber(a,e){e=parseInt(e)||0;let i=!1;if(_NumberisInteger(a)&&0<=a&&127>=a)i=parseInt(a);else if(0<=parseInt(a)&&127>=parseInt(a))i=parseInt(a);else if("string"==typeof a||a instanceof String)try{i=this.toNoteNumber(a.trim(),e)}catch(t){return!1}return i}static toNoteIdentifier(a,i){if(a=parseInt(a),isNaN(a)||0>a||127<a)throw new RangeError("Invalid note number");if(i=null==i?0:parseInt(i),isNaN(i))throw new RangeError("Invalid octaveOffset value");const s=_Mathfloor(a/12-1)+i;return["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"][a%12]+s.toString()}static buildNote(a,e={}){if(e.octaveOffset=parseInt(e.octaveOffset)||0,a instanceof Note)return a;let t=this.guessNoteNumber(a,e.octaveOffset);if(!1===t)throw new TypeError(`The input could not be parsed as a note (${a})`);return e.octaveOffset=void 0,new Note(t,e)}static buildNoteArray(a,i={}){let t=[];return Array.isArray(a)||(a=[a]),a.forEach(n=>{t.push(this.buildNote(n,i))}),t}static from7bitToFloat(t){return t===1/0&&(t=127),t=parseInt(t)||0,_Mathmin(_Mathmax(t/127,0),1)}static fromFloatTo7Bit(t){return t===1/0&&(t=1),t=parseFloat(t)||0,_Mathmin(_Mathmax(_Mathround(127*t),0),127)}static fromMsbLsbToFloat(a,i=0){wm.validation&&(a=_Mathmin(_Mathmax(parseInt(a)||0,0),127),i=_Mathmin(_Mathmax(parseInt(i)||0,0),127));const s=((a<<7)+i)/16383;return _Mathmin(_Mathmax(s,0),1)}static fromFloatToMsbLsb(n){wm.validation&&(n=_Mathmin(_Mathmax(parseFloat(n)||0,0),1));const a=_Mathround(16383*n);return{msb:a>>7,lsb:127&a}}static offsetNumber(a,i=0,s=0){if(wm.validation){if(a=parseInt(a),isNaN(a))throw new Error("Invalid note number");i=parseInt(i)||0,s=parseInt(s)||0}return _Mathmin(_Mathmax(a+12*i+s,0),127)}static getPropertyByValue(a,e){return Object.keys(a).find(t=>a[t]===e)}static getCcNameByNumber(t){return Utilities.getPropertyByValue(Enumerations.MIDI_CONTROL_CHANGE_MESSAGES,t)}static getChannelModeByNumber(n){if(!(120<=n&&127>=n))return!1;for(let e in Enumerations.MIDI_CHANNEL_MODE_MESSAGES)if(Enumerations.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(e)&&n===Enumerations.MIDI_CHANNEL_MODE_MESSAGES[e])return e;return!1}static get isNode(){return"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}static get isBrowser(){return"undefined"!=typeof window&&void 0!==window.document}}/**
	 * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are
	 * provided by an [`Output`](Output) port which, itself, is made available by a device. The
	 * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated
	 * directly.
	 *
	 * All 16 `OutputChannel` objects can be found inside the parent output's
	 * [`channels`]{@link Output#channels} property.
	 *
	 * @param {Output} output The [`Output`](Output) this channel belongs to.
	 * @param {number} number The MIDI channel number (`1` - `16`).
	 *
	 * @extends EventEmitter
	 * @license Apache-2.0
	 * @since 3.0.0
	 */class OutputChannel extends EventEmitter{constructor(n,e){super(),this._output=n,this._number=e,this._octaveOffset=0}destroy(){this._output=null,this._number=null,this._octaveOffset=0,this.removeListener()}send(n,e={time:0}){return this.output.send(n,e),this}sendKeyAftertouch(a,i,r={}){if(wm.validation){if(r.useRawValue&&(r.rawValue=r.useRawValue),isNaN(parseFloat(i)))throw new RangeError("Invalid key aftertouch value.");if(r.rawValue){if(!(0<=i&&127>=i&&_NumberisInteger(i)))throw new RangeError("Key aftertouch raw value must be an integer between 0 and 127.");}else if(!(0<=i&&1>=i))throw new RangeError("Key aftertouch value must be a float between 0 and 1.")}r.rawValue||(i=Utilities.fromFloatTo7Bit(i));const n=wm.octaveOffset+this.output.octaveOffset+this.octaveOffset;return Array.isArray(a)||(a=[a]),Utilities.buildNoteArray(a).forEach(t=>{this.send([(Enumerations.MIDI_CHANNEL_MESSAGES.keyaftertouch<<4)+(this.number-1),t.getOffsetNumber(n),i],{time:Utilities.toTimestamp(r.time)})}),this}/**
	   * Sends a MIDI **control change** message to the channel at the scheduled time. The control
	   * change message to send can be specified numerically (`0` to `127`) or by using one of the
	   * following common names:
	   *
	   * | Number | Name                          |
	   * |--------|-------------------------------|
	   * | 0      |`bankselectcoarse`             |
	   * | 1      |`modulationwheelcoarse`        |
	   * | 2      |`breathcontrollercoarse`       |
	   * | 4      |`footcontrollercoarse`         |
	   * | 5      |`portamentotimecoarse`         |
	   * | 6      |`dataentrycoarse`              |
	   * | 7      |`volumecoarse`                 |
	   * | 8      |`balancecoarse`                |
	   * | 10     |`pancoarse`                    |
	   * | 11     |`expressioncoarse`             |
	   * | 12     |`effectcontrol1coarse`         |
	   * | 13     |`effectcontrol2coarse`         |
	   * | 18     |`generalpurposeslider3`        |
	   * | 19     |`generalpurposeslider4`        |
	   * | 32     |`bankselectfine`               |
	   * | 33     |`modulationwheelfine`          |
	   * | 34     |`breathcontrollerfine`         |
	   * | 36     |`footcontrollerfine`           |
	   * | 37     |`portamentotimefine`           |
	   * | 38     |`dataentryfine`                |
	   * | 39     |`volumefine`                   |
	   * | 40     |`balancefine`                  |
	   * | 42     |`panfine`                      |
	   * | 43     |`expressionfine`               |
	   * | 44     |`effectcontrol1fine`           |
	   * | 45     |`effectcontrol2fine`           |
	   * | 64     |`holdpedal`                    |
	   * | 65     |`portamento`                   |
	   * | 66     |`sustenutopedal`               |
	   * | 67     |`softpedal`                    |
	   * | 68     |`legatopedal`                  |
	   * | 69     |`hold2pedal`                   |
	   * | 70     |`soundvariation`               |
	   * | 71     |`resonance`                    |
	   * | 72     |`soundreleasetime`             |
	   * | 73     |`soundattacktime`              |
	   * | 74     |`brightness`                   |
	   * | 75     |`soundcontrol6`                |
	   * | 76     |`soundcontrol7`                |
	   * | 77     |`soundcontrol8`                |
	   * | 78     |`soundcontrol9`                |
	   * | 79     |`soundcontrol10`               |
	   * | 80     |`generalpurposebutton1`        |
	   * | 81     |`generalpurposebutton2`        |
	   * | 82     |`generalpurposebutton3`        |
	   * | 83     |`generalpurposebutton4`        |
	   * | 91     |`reverblevel`                  |
	   * | 92     |`tremololevel`                 |
	   * | 93     |`choruslevel`                  |
	   * | 94     |`celestelevel`                 |
	   * | 95     |`phaserlevel`                  |
	   * | 96     |`databuttonincrement`          |
	   * | 97     |`databuttondecrement`          |
	   * | 98     |`nonregisteredparametercoarse` |
	   * | 99     |`nonregisteredparameterfine`   |
	   * | 100    |`registeredparametercoarse`    |
	   * | 101    |`registeredparameterfine`      |
	   * | 120    |`allsoundoff`                  |
	   * | 121    |`resetallcontrollers`          |
	   * | 122    |`localcontrol`                 |
	   * | 123    |`allnotesoff`                  |
	   * | 124    |`omnimodeoff`                  |
	   * | 125    |`omnimodeon`                   |
	   * | 126    |`monomodeon`                   |
	   * | 127    |`polymodeon`                   |
	   *
	   * As you can see above, not all control change message have a matching name. This does not mean
	   * you cannot use the others. It simply means you will need to use their number
	   * (`0` to `127`) instead of their name. While you can still use them, numbers `120` to `127` are
	   * usually reserved for *channel mode* messages. See
	   * [`sendChannelMode()`]{@link OutputChannel#sendChannelMode} method for more info.
	   *
	   * To view a detailed list of all available **control change** messages, please consult "Table 3 -
	   * Control Change Messages" from the [MIDI Messages](
	   * https://www.midi.org/specifications/item/table-3-control-change-messages-data-bytes-2)
	   * specification.
	   *
	   * **Note**: messages #0-31 (MSB) are paired with messages #32-63 (LSB). For example, message #1
	   * (`modulationwheelcoarse`) can be accompanied by a second control change message for
	   * `modulationwheelfine` to achieve a greater level of precision. if you want to specify both MSB
	   * and LSB for messages between `0` and `31`, you can do so by passing a 2-value array as the
	   * second parameter.
	   *
	   * @param {number|string} controller The MIDI controller name or number (`0` - `127`).
	   *
	   * @param {number|number[]} value The value to send (0-127). You can also use a two-position array
	   * for controllers 0 to 31. In this scenario, the first value will be sent as usual and the second
	   * value will be sent to the matching LSB controller (which is obtained by adding 32 to the first
	   * controller)
	   *
	   * @param {object} [options={}]
	   *
	   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `"+"` and
	   * followed by a number, the message will be delayed by that many milliseconds. If the value is a
	   * positive number
	   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),
	   * the operation will be scheduled for that time. The current time can be retrieved with
	   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the
	   * operation will be carried out as soon as possible.
	   *
	   * @throws {RangeError} Controller numbers must be between 0 and 127.
	   * @throws {RangeError} Invalid controller name.
	   * @throws {TypeError} The value array must have a length of 2.
	   *
	   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.
	   *
	   * @license Apache-2.0
	   * @since 3.0.0
	   */sendControlChange(a,i,o={}){if("string"==typeof a&&(a=Enumerations.MIDI_CONTROL_CHANGE_MESSAGES[a]),Array.isArray(i)||(i=[i]),wm.validation){if(void 0===a)throw new TypeError("Control change must be identified with a valid name or an integer between 0 and 127.");if(!_NumberisInteger(a)||!(0<=a&&127>=a))throw new TypeError("Control change number must be an integer between 0 and 127.");if(2===(i=i.map(n=>{const e=_Mathmin(_Mathmax(parseInt(n),0),127);if(isNaN(e))throw new TypeError("Values must be integers between 0 and 127");return e})).length&&32<=a)throw new TypeError("To use a value array, the controller must be between 0 and 31")}return i.forEach((e,t)=>{this.send([(Enumerations.MIDI_CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),a+32*t,i[t]],{time:Utilities.toTimestamp(o.time)})}),this}_selectNonRegisteredParameter(n,e={}){return this.sendControlChange(99,n[0],e),this.sendControlChange(98,n[1],e),this}_deselectRegisteredParameter(t={}){return this.sendControlChange(101,127,t),this.sendControlChange(100,127,t),this}_deselectNonRegisteredParameter(t={}){return this.sendControlChange(101,127,t),this.sendControlChange(100,127,t),this}_selectRegisteredParameter(n,e={}){return this.sendControlChange(101,n[0],e),this.sendControlChange(100,n[1],e),this}_setCurrentParameter(n,a={}){return n=[].concat(n),this.sendControlChange(6,n[0],a),2>n.length||this.sendControlChange(38,n[1],a),this}sendRpnDecrement(a,n={}){if(Array.isArray(a)||(a=Enumerations.MIDI_REGISTERED_PARAMETERS[a]),wm.validation){if(void 0===a)throw new TypeError("The specified registered parameter is invalid.");let e=!1;if(Object.getOwnPropertyNames(Enumerations.MIDI_REGISTERED_PARAMETERS).forEach(t=>{Enumerations.MIDI_REGISTERED_PARAMETERS[t][0]===a[0]&&Enumerations.MIDI_REGISTERED_PARAMETERS[t][1]===a[1]&&(e=!0)}),!e)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(a,n),this.sendControlChange(97,0,n),this._deselectRegisteredParameter(n),this}sendRpnIncrement(a,n={}){if(Array.isArray(a)||(a=Enumerations.MIDI_REGISTERED_PARAMETERS[a]),wm.validation){if(void 0===a)throw new TypeError("The specified registered parameter is invalid.");let e=!1;if(Object.getOwnPropertyNames(Enumerations.MIDI_REGISTERED_PARAMETERS).forEach(t=>{Enumerations.MIDI_REGISTERED_PARAMETERS[t][0]===a[0]&&Enumerations.MIDI_REGISTERED_PARAMETERS[t][1]===a[1]&&(e=!0)}),!e)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(a,n),this.sendControlChange(96,0,n),this._deselectRegisteredParameter(n),this}playNote(a,e={}){if(this.sendNoteOn(a,e),0<e.duration&&isFinite((e.duration+"").trim()||NaN)){let t={time:(Utilities.toTimestamp(e.time)||wm.time)+e.duration,release:e.release,rawRelease:e.rawRelease};this.sendNoteOff(a,t)}return this}sendNoteOff(a,i={}){if(wm.validation){if(null!=i.rawRelease&&!(0<=i.rawRelease&&127>=i.rawRelease))throw new RangeError("The 'rawRelease' option must be an integer between 0 and 127");if(null!=i.release&&!(0<=i.release&&1>=i.release))throw new RangeError("The 'release' option must be an number between 0 and 1");i.rawVelocity&&(i.rawRelease=i.velocity,console.warn("The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.")),i.velocity&&(i.release=i.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let e=64;null==i.rawRelease?isNaN(i.release)||(e=_Mathround(127*i.release)):e=i.rawRelease;const t=wm.octaveOffset+this.output.octaveOffset+this.octaveOffset;return Utilities.buildNoteArray(a,{rawRelease:parseInt(e)}).forEach(n=>{this.send([(Enumerations.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(this.number-1),n.getOffsetNumber(t),n.rawRelease],{time:Utilities.toTimestamp(i.time)})}),this}stopNote(n,e={}){return this.sendNoteOff(n,e)}sendNoteOn(a,i={}){if(wm.validation){if(null!=i.rawAttack&&!(0<=i.rawAttack&&127>=i.rawAttack))throw new RangeError("The 'rawAttack' option must be an integer between 0 and 127");if(null!=i.attack&&!(0<=i.attack&&1>=i.attack))throw new RangeError("The 'attack' option must be an number between 0 and 1");i.rawVelocity&&(i.rawAttack=i.velocity,i.rawRelease=i.release,console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.")),i.velocity&&(i.attack=i.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let e=64;null==i.rawAttack?isNaN(i.attack)||(e=_Mathround(127*i.attack)):e=i.rawAttack;const t=wm.octaveOffset+this.output.octaveOffset+this.octaveOffset;return Utilities.buildNoteArray(a,{rawAttack:e}).forEach(n=>{this.send([(Enumerations.MIDI_CHANNEL_MESSAGES.noteon<<4)+(this.number-1),n.getOffsetNumber(t),n.rawAttack],{time:Utilities.toTimestamp(i.time)})}),this}sendChannelMode(a,i=0,t={}){if("string"==typeof a&&(a=Enumerations.MIDI_CHANNEL_MODE_MESSAGES[a]),wm.validation){if(void 0===a)throw new TypeError("Invalid channel mode message name or number.");if(isNaN(a)||!(120<=a&&127>=a))throw new TypeError("Invalid channel mode message number.");if(isNaN(parseInt(i))||0>i||127<i)throw new RangeError("Value must be an integer between 0 and 127.")}return this.send([(Enumerations.MIDI_CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),a,i],{time:Utilities.toTimestamp(t.time)}),this}sendOmniMode(n,e={}){return void 0===n||n?this.sendChannelMode("omnimodeon",0,e):this.sendChannelMode("omnimodeoff",0,e),this}sendChannelAftertouch(n,e={}){if(wm.validation){if(isNaN(parseFloat(n)))throw new RangeError("Invalid channel aftertouch value.");if(e.rawValue){if(!(0<=n&&127>=n&&_NumberisInteger(n)))throw new RangeError("Channel aftertouch raw value must be an integer between 0 and 127.");}else if(!(0<=n&&1>=n))throw new RangeError("Channel aftertouch value must be a float between 0 and 1.")}return this.send([(Enumerations.MIDI_CHANNEL_MESSAGES.channelaftertouch<<4)+(this.number-1),_Mathround(127*n)],{time:Utilities.toTimestamp(e.time)}),this}sendMasterTuning(a,o={}){if(a=parseFloat(a)||0,wm.validation&&!(-65<a&&64>a))throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");let t=_Mathfloor(a)+64,n=a-_Mathfloor(a);n=_Mathround(16383*((n+1)/2));let l=127&n>>7,r=127&n;return this.sendRpnValue("channelcoarsetuning",t,o),this.sendRpnValue("channelfinetuning",[l,r],o),this}sendModulationRange(a,e,i={}){if(wm.validation){if(!_NumberisInteger(a)||!(0<=a&&127>=a))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!(null==e||_NumberisInteger(e)&&0<=e&&127>=e))throw new RangeError("If specified, the cents value must be an integer between 0 and 127.")}return 0<=e&&127>=e||(e=0),this.sendRpnValue("modulationrange",[a,e],i),this}sendNrpnValue(a,e,i={}){if(e=[].concat(e),wm.validation){if(!Array.isArray(a)||!_NumberisInteger(a[0])||!_NumberisInteger(a[1]))throw new TypeError("The specified NRPN is invalid.");if(!(0<=a[0]&&127>=a[0]))throw new RangeError("The first byte of the NRPN must be between 0 and 127.");if(!(0<=a[1]&&127>=a[1]))throw new RangeError("The second byte of the NRPN must be between 0 and 127.");e.forEach(t=>{if(!(0<=t&&127>=t))throw new RangeError("The data bytes of the NRPN must be between 0 and 127.")})}return this._selectNonRegisteredParameter(a,i),this._setCurrentParameter(e,i),this._deselectNonRegisteredParameter(i),this}sendPitchBend(a,e={}){if(wm.validation)if(e.rawValue&&Array.isArray(a)){if(!(0<=a[0]&&127>=a[0]))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.");if(!(0<=a[1]&&127>=a[1]))throw new RangeError("The pitch bend LSB must be an integer between 0 and 127.")}else if(!e.rawValue||Array.isArray(a)){if(isNaN(a)||null===a)throw new RangeError("Invalid pitch bend value.");if(!(-1<=a&&1>=a))throw new RangeError("The pitch bend value must be a float between -1 and 1.")}else if(!(0<=a&&127>=a))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.");let i=0,r=0;if(e.rawValue&&Array.isArray(a))i=a[0],r=a[1];else if(e.rawValue&&!Array.isArray(a))i=a;else{const e=Utilities.fromFloatToMsbLsb((a+1)/2);i=e.msb,r=e.lsb}return this.send([(Enumerations.MIDI_CHANNEL_MESSAGES.pitchbend<<4)+(this.number-1),r,i],{time:Utilities.toTimestamp(e.time)}),this}sendPitchBendRange(a,e,t={}){if(wm.validation){if(!_NumberisInteger(a)||!(0<=a&&127>=a))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!_NumberisInteger(e)||!(0<=e&&127>=e))throw new RangeError("The cents value must be an integer between 0 and 127.")}return this.sendRpnValue("pitchbendrange",[a,e],t),this}sendProgramChange(n,a={}){if(n=parseInt(n)||0,wm.validation&&!(0<=n&&127>=n))throw new RangeError("The program number must be between 0 and 127.");return this.send([(Enumerations.MIDI_CHANNEL_MESSAGES.programchange<<4)+(this.number-1),n],{time:Utilities.toTimestamp(a.time)}),this}sendRpnValue(a,i,t={}){if(Array.isArray(a)||(a=Enumerations.MIDI_REGISTERED_PARAMETERS[a]),wm.validation){if(!_NumberisInteger(a[0])||!_NumberisInteger(a[1]))throw new TypeError("The specified NRPN is invalid.");if(!(0<=a[0]&&127>=a[0]))throw new RangeError("The first byte of the RPN must be between 0 and 127.");if(!(0<=a[1]&&127>=a[1]))throw new RangeError("The second byte of the RPN must be between 0 and 127.");[].concat(i).forEach(t=>{if(!(0<=t&&127>=t))throw new RangeError("The data bytes of the RPN must be between 0 and 127.")})}return this._selectRegisteredParameter(a,t),this._setCurrentParameter(i,t),this._deselectRegisteredParameter(t),this}sendTuningBank(n,e={}){if(wm.validation&&(!_NumberisInteger(n)||!(0<=n&&127>=n)))throw new RangeError("The tuning bank number must be between 0 and 127.");return this.sendRpnValue("tuningbank",n,e),this}sendTuningProgram(n,e={}){if(wm.validation&&(!_NumberisInteger(n)||!(0<=n&&127>=n)))throw new RangeError("The tuning program number must be between 0 and 127.");return this.sendRpnValue("tuningprogram",n,e),this}sendLocalControl(n,e={}){return n?this.sendChannelMode("localcontrol",127,e):this.sendChannelMode("localcontrol",0,e)}sendAllNotesOff(t={}){return this.sendChannelMode("allnotesoff",0,t)}sendAllSoundOff(t={}){return this.sendChannelMode("allsoundoff",0,t)}sendResetAllControllers(t={}){return this.sendChannelMode("resetallcontrollers",0,t)}sendPolyphonicMode(n,e={}){return"mono"===n?this.sendChannelMode("monomodeon",0,e):this.sendChannelMode("polymodeon",0,e)}get octaveOffset(){return this._octaveOffset}set octaveOffset(t){if(this.validation&&(t=parseInt(t),isNaN(t)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=t}get output(){return this._output}get number(){return this._number}}/**
	 * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).
	 * A port is made available by a MIDI device. A MIDI device can advertise several input and output
	 * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)
	 * property.
	 *
	 * The `Output` object is automatically instantiated by the library according to the host's MIDI
	 * subsystem and should not be directly instantiated.
	 *
	 * You can access all available `Output` objects by referring to the
	 * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as
	 * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or
	 * [`WebMidi.getOutputById()`](WebMidi#getOutputById).
	 *
	 * @fires Output#opened
	 * @fires Output#disconnected
	 * @fires Output#closed
	 *
	 * @extends EventEmitter
	 * @license Apache-2.0
	 */class Output extends EventEmitter{constructor(t){super(),this._midiOutput=t,this._octaveOffset=0,this.channels=[];for(let n=1;16>=n;n++)this.channels[n]=new OutputChannel(this,n);this._midiOutput.onstatechange=this._onStateChange.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(t=>t.destroy()),this.channels=[],this._midiOutput.onstatechange=null,await this.close(),this._midiOutput=null}_onStateChange(n){let e={timestamp:wm.time};"open"===n.port.connection?(e.type="opened",e.target=this,e.port=e.target,this.emit("opened",e)):"closed"===n.port.connection&&"connected"===n.port.state?(e.type="closed",e.target=this,e.port=e.target,this.emit("closed",e)):"closed"===n.port.connection&&"disconnected"===n.port.state?(e.type="disconnected",e.port={connection:n.port.connection,id:n.port.id,manufacturer:n.port.manufacturer,name:n.port.name,state:n.port.state,type:n.port.type},this.emit("disconnected",e)):"pending"===n.port.connection&&"disconnected"===n.port.state||console.warn("This statechange event was not caught:",n.port.connection,n.port.state)}async open(){try{return await this._midiOutput.open(),Promise.resolve(this)}catch(t){return Promise.reject(t)}}async close(){this._midiOutput?await this._midiOutput.close():await Promise.resolve()}/**
	   * Sends a MIDI message on the MIDI output port. If no time is specified, the message will be
	   * sent immediately. The message should be an array of 8 bit unsigned integers (0-225), a
	   * [`Uint8Array`]{@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array}
	   * object or a [`Message`](Message) object.
	   *
	   * It is usually not necessary to use this method directly as you can use one of the simpler
	   * helper methods such as [`playNote()`](#playNote), [`stopNote()`](#stopNote),
	   * [`sendControlChange()`](#sendControlChange), etc.
	   *
	   * Details on the format of MIDI messages are available in the summary of
	   * [MIDI messages]{@link https://www.midi.org/specifications-old/item/table-1-summary-of-midi-message}
	   * from the MIDI Manufacturers Association.
	   *
	   * @param message {number[]|Uint8Array|Message} An array of 8bit unsigned integers, a `Uint8Array`
	   * object (not available in Node.js) containing the message bytes or a `Message` object.
	   *
	   * @param {object} [options={}]
	   *
	   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `"+"` and
	   * followed by a number, the message will be delayed by that many milliseconds. If the value is a
	   * positive number
	   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),
	   * the operation will be scheduled for that time. The current time can be retrieved with
	   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the
	   * operation will be carried out as soon as possible.
	   *
	   * @throws {RangeError} The first byte (status) must be an integer between 128 and 255.
	   *
	   * @returns {Output} Returns the `Output` object so methods can be chained.
	   *
	   * @license Apache-2.0
	   */send(a,i={time:0},s=0){if(a instanceof Message&&(a=Utilities.isNode?a.data:a.rawData),a instanceof Uint8Array&&Utilities.isNode&&(a=Array.from(a)),wm.validation){if(Array.isArray(a)||a instanceof Uint8Array||(a=[a],Array.isArray(i)&&(a=a.concat(i)),i=isNaN(s)?{time:0}:{time:s}),!(128<=parseInt(a[0])&&255>=parseInt(a[0])))throw new RangeError("The first byte (status) must be an integer between 128 and 255.");a.slice(1).forEach(t=>{if(!(0<=(t=parseInt(t))&&255>=t))throw new RangeError("Data bytes must be integers between 0 and 255.")}),i||(i={time:0})}return this._midiOutput.send(a,Utilities.toTimestamp(i.time)),this}sendSysex(a,i=[],t={}){if(a=[].concat(a),i instanceof Uint8Array){const e=new Uint8Array(1+a.length+i.length+1);e[0]=Enumerations.MIDI_SYSTEM_MESSAGES.sysex,e.set(Uint8Array.from(a),1),e.set(i,1+a.length),e[e.length-1]=Enumerations.MIDI_SYSTEM_MESSAGES.sysexend,this.send(e,{time:t.time})}else{const e=a.concat(i,Enumerations.MIDI_SYSTEM_MESSAGES.sysexend);this.send([Enumerations.MIDI_SYSTEM_MESSAGES.sysex].concat(e),{time:t.time})}return this}clear(){return this._midiOutput.clear?this._midiOutput.clear():wm.validation&&console.warn("The 'clear()' method has not yet been implemented in your environment."),this}sendTimecodeQuarterFrame(n,a={}){if(wm.validation&&(n=parseInt(n),isNaN(n)||!(0<=n&&127>=n)))throw new RangeError("The value must be an integer between 0 and 127.");return this.send([Enumerations.MIDI_SYSTEM_MESSAGES.timecode,n],{time:a.time}),this}sendSongPosition(a=0,i={}){var t=127&(a=_Mathfloor(a)||0)>>7,n=127&a;return this.send([Enumerations.MIDI_SYSTEM_MESSAGES.songposition,t,n],{time:i.time}),this}sendSongSelect(n=0,a={}){if(wm.validation&&(n=parseInt(n),isNaN(n)||!(0<=n&&127>=n)))throw new RangeError("The program value must be between 0 and 127");return this.send([Enumerations.MIDI_SYSTEM_MESSAGES.songselect,n],{time:a.time}),this}sendTuneRequest(t={}){return this.send([Enumerations.MIDI_SYSTEM_MESSAGES.tunerequest],{time:t.time}),this}sendClock(t={}){return this.send([Enumerations.MIDI_SYSTEM_MESSAGES.clock],{time:t.time}),this}sendStart(t={}){return this.send([Enumerations.MIDI_SYSTEM_MESSAGES.start],{time:t.time}),this}sendContinue(t={}){return this.send([Enumerations.MIDI_SYSTEM_MESSAGES.continue],{time:t.time}),this}sendStop(t={}){return this.send([Enumerations.MIDI_SYSTEM_MESSAGES.stop],{time:t.time}),this}sendActiveSensing(t={}){return this.send([Enumerations.MIDI_SYSTEM_MESSAGES.activesensing],{time:t.time}),this}sendReset(t={}){return this.send([Enumerations.MIDI_SYSTEM_MESSAGES.reset],{time:t.time}),this}sendTuningRequest(t={}){return wm.validation&&console.warn("The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead."),this.sendTuneRequest(t)}sendKeyAftertouch(a,e,t={}){return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendKeyAftertouch(a,e,t)}),this}sendControlChange(a,e,t={},i={}){if(wm.validation&&(Array.isArray(t)||_NumberisInteger(t)||"all"===t)){const n=t;(t=i).channels=n,"all"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendControlChange(a,e,t)}),this}sendPitchBendRange(a=0,e=0,t={}){return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendPitchBendRange(a,e,t)}),this}setPitchBendRange(a=0,e=0,t="all",n={}){return wm.validation&&(console.warn("The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead."),n.channels=t,"all"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendPitchBendRange(a,e,n)}sendRpnValue(a,e,t={}){return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendRpnValue(a,e,t)}),this}setRegisteredParameter(a,e=[],t="all",n={}){return wm.validation&&(console.warn("The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead."),n.channels=t,"all"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendRpnValue(a,e,n)}sendChannelAftertouch(a,i={},s={}){if(wm.validation&&(Array.isArray(i)||_NumberisInteger(i)||"all"===i)){const t=i;(i=s).channels=t,"all"===i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(i.channels).forEach(e=>{this.channels[e].sendChannelAftertouch(a,i)}),this}sendPitchBend(a,i={},s={}){if(wm.validation&&(Array.isArray(i)||_NumberisInteger(i)||"all"===i)){const t=i;(i=s).channels=t,"all"===i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(i.channels).forEach(e=>{this.channels[e].sendPitchBend(a,i)}),this}sendProgramChange(a=0,i={},s={}){if(wm.validation&&(Array.isArray(i)||_NumberisInteger(i)||"all"===i)){const t=i;(i=s).channels=t,"all"===i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(i.channels).forEach(e=>{this.channels[e].sendProgramChange(a,i)}),this}sendModulationRange(a,e,t={}){return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendModulationRange(a,e,t)}),this}setModulationRange(a=0,e=0,t="all",n={}){return wm.validation&&(console.warn("The setModulationRange() method is deprecated. Use sendModulationRange() instead."),n.channels=t,"all"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendModulationRange(a,e,n)}sendMasterTuning(a,e={}){return null==e.channels&&(e.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendMasterTuning(a,e)}),this}setMasterTuning(a,e={},t={}){return wm.validation&&(console.warn("The setMasterTuning() method is deprecated. Use sendMasterTuning() instead."),t.channels=e,"all"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendMasterTuning(a,t)}sendTuningProgram(a,e={}){return null==e.channels&&(e.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendTuningProgram(a,e)}),this}setTuningProgram(a,e="all",t={}){return wm.validation&&(console.warn("The setTuningProgram() method is deprecated. Use sendTuningProgram() instead."),t.channels=e,"all"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendTuningProgram(a,t)}sendTuningBank(a=0,e={}){return null==e.channels&&(e.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendTuningBank(a,e)}),this}setTuningBank(a,e="all",t={}){return wm.validation&&(console.warn("The setTuningBank() method is deprecated. Use sendTuningBank() instead."),t.channels=e,"all"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendTuningBank(a,t)}sendChannelMode(a,e=0,t={},i={}){if(wm.validation&&(Array.isArray(t)||_NumberisInteger(t)||"all"===t)){const n=t;(t=i).channels=n,"all"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendChannelMode(a,e,t)}),this}sendAllSoundOff(n={}){return null==n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(n.channels).forEach(e=>{this.channels[e].sendAllSoundOff(n)}),this}sendAllNotesOff(n={}){return null==n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(n.channels).forEach(e=>{this.channels[e].sendAllNotesOff(n)}),this}sendResetAllControllers(a={},i={}){if(wm.validation&&(Array.isArray(a)||_NumberisInteger(a)||"all"===a)){const e=a;(a=i).channels=e,"all"===a.channels&&(a.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==a.channels&&(a.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(a.channels).forEach(e=>{this.channels[e].sendResetAllControllers(a)}),this}sendPolyphonicMode(a,i={},s={}){if(wm.validation&&(Array.isArray(i)||_NumberisInteger(i)||"all"===i)){const t=i;(i=s).channels=t,"all"===i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(i.channels).forEach(e=>{this.channels[e].sendPolyphonicMode(a,i)}),this}sendLocalControl(a,i={},s={}){if(wm.validation&&(Array.isArray(i)||_NumberisInteger(i)||"all"===i)){const t=i;(i=s).channels=t,"all"===i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(i.channels).forEach(e=>{this.channels[e].sendLocalControl(a,i)}),this}sendOmniMode(a,i={},s={}){if(wm.validation&&(Array.isArray(i)||_NumberisInteger(i)||"all"===i)){const t=i;(i=s).channels=t,"all"===i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(i.channels).forEach(e=>{this.channels[e].sendOmniMode(a,i)}),this}sendNrpnValue(a,e,t={}){return null==t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendNrpnValue(a,e,t)}),this}setNonRegisteredParameter(a,e=[],t="all",n={}){return wm.validation&&(console.warn("The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead."),n.channels=t,"all"===n.channels&&(n.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendNrpnValue(a,e,n)}sendRpnIncrement(a,e={}){return null==e.channels&&(e.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendRpnIncrement(a,e)}),this}incrementRegisteredParameter(a,e="all",t={}){return wm.validation&&(console.warn("The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead."),t.channels=e,"all"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendRpnIncrement(a,t)}sendRpnDecrement(a,e={}){return null==e.channels&&(e.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendRpnDecrement(a,e)}),this}decrementRegisteredParameter(a,e="all",t={}){return wm.validation&&(console.warn("The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead."),t.channels=e,"all"===t.channels&&(t.channels=Enumerations.MIDI_CHANNEL_NUMBERS)),this.sendRpnDecrement(a,t)}sendNoteOff(a,i={},s={}){if(wm.validation&&(Array.isArray(i)||_NumberisInteger(i)||"all"===i)){const t=i;(i=s).channels=t,"all"===i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(i.channels).forEach(e=>{this.channels[e].sendNoteOff(a,i)}),this}stopNote(n,e){return this.sendNoteOff(n,e)}playNote(a,i={},s={}){if(wm.validation&&(i.rawVelocity&&console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' instead."),i.velocity&&console.warn("The 'velocity' option is deprecated. Use 'velocity' instead."),Array.isArray(i)||_NumberisInteger(i)||"all"===i)){const t=i;(i=s).channels=t,"all"===i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(i.channels).forEach(e=>{this.channels[e].playNote(a,i)}),this}sendNoteOn(a,i={},s={}){if(wm.validation&&(Array.isArray(i)||_NumberisInteger(i)||"all"===i)){const t=i;(i=s).channels=t,"all"===i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS)}return null==i.channels&&(i.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(i.channels).forEach(e=>{this.channels[e].sendNoteOn(a,i)}),this}get name(){return this._midiOutput.name}get id(){return this._midiOutput.id}get connection(){return this._midiOutput.connection}get manufacturer(){return this._midiOutput.manufacturer}get state(){return this._midiOutput.state}get type(){return this._midiOutput.type}get octaveOffset(){return this._octaveOffset}set octaveOffset(t){if(this.validation&&(t=parseInt(t),isNaN(t)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=t}}/**
	 * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you
	 * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object
	 * to all the outputs listed in its [`destinations`](#destinations) property.
	 *
	 * If specific channels or message types have been defined in the [`channels`](#channels) or
	 * [`types`](#types) properties, only messages matching the channels/types will be forwarded.
	 *
	 * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as
	 * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.
	 *
	 * @license Apache-2.0
	 * @since 3.0.0
	 */class Forwarder{constructor(n=[],a={}){this.destinations=[],this.types=[...Object.keys(Enumerations.MIDI_SYSTEM_MESSAGES),...Object.keys(Enumerations.MIDI_CHANNEL_MESSAGES)],this.channels=Enumerations.MIDI_CHANNEL_NUMBERS,this.suspended=!1,Array.isArray(n)||(n=[n]),a.types&&!Array.isArray(a.types)&&(a.types=[a.types]),a.channels&&!Array.isArray(a.channels)&&(a.channels=[a.channels]),wm.validation&&(n.forEach(t=>{if(!(t instanceof Output))throw new TypeError("Destinations must be of type 'Output'.")}),void 0!==a.types&&a.types.forEach(t=>{if(!Enumerations.MIDI_SYSTEM_MESSAGES.hasOwnProperty(t)&&!Enumerations.MIDI_CHANNEL_MESSAGES.hasOwnProperty(t))throw new TypeError("Type must be a valid message type.")}),void 0!==a.channels&&a.channels.forEach(t=>{if(!Enumerations.MIDI_CHANNEL_NUMBERS.includes(t))throw new TypeError("MIDI channel must be between 1 and 16.")})),this.destinations=n,a.types&&(this.types=a.types),a.channels&&(this.channels=a.channels)}forward(n){this.suspended||this.types.includes(n.type)&&(n.channel&&!this.channels.includes(n.channel)||this.destinations.forEach(e=>{(!wm.validation||e instanceof Output)&&e.send(n)}))}}/**
	 * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input
	 * device. This object is derived from the host's MIDI subsystem and should not be instantiated
	 * directly.
	 *
	 * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)
	 * property.
	 *
	 * @fires InputChannel#midimessage
	 * @fires InputChannel#unknownmessage
	 *
	 * @fires InputChannel#noteoff
	 * @fires InputChannel#noteon
	 * @fires InputChannel#keyaftertouch
	 * @fires InputChannel#programchange
	 * @fires InputChannel#event:controlchange-controllerxxx
	 * @fires InputChannel#channelaftertouch
	 * @fires InputChannel#pitchbend
	 * @fires InputChannel#controlchange
	 *
	 * @fires InputChannel#allnotesoff
	 * @fires InputChannel#allsoundoff
	 * @fires InputChannel#localcontrol
	 * @fires InputChannel#monomode
	 * @fires InputChannel#omnimode
	 * @fires InputChannel#resetallcontrollers
	 *
	 * @fires InputChannel#event:nrpn
	 * @fires InputChannel#event:nrpn-dataentrycoarse
	 * @fires InputChannel#event:nrpn-dataentryfine
	 * @fires InputChannel#event:nrpn-databuttonincrement
	 * @fires InputChannel#event:nrpn-databuttondecrement
	 * @fires InputChannel#event:rpn
	 * @fires InputChannel#event:rpn-dataentrycoarse
	 * @fires InputChannel#event:rpn-dataentryfine
	 * @fires InputChannel#event:rpn-databuttonincrement
	 * @fires InputChannel#event:rpn-databuttondecrement
	 *
	 * @extends EventEmitter
	 * @license Apache-2.0
	 * @since 3.0.0
	 */class InputChannel extends EventEmitter{constructor(n,e){super(),this._input=n,this._number=e,this._octaveOffset=0,this._nrpnBuffer=[],this._rpnBuffer=[],this.parameterNumberEventsEnabled=!0,this.notesState=Array(128).fill(!1)}destroy(){this._input=null,this._number=null,this._octaveOffset=0,this._nrpnBuffer=[],this.notesState=Array(128).fill(!1),this.parameterNumberEventsEnabled=!1,this.removeListener()}_processMidiMessageEvent(n){const e=Object.assign({},n);e.port=this.input,e.target=this,e.type="midimessage",this.emit(e.type,e),this._parseEventForStandardMessages(e)}_parseEventForStandardMessages(a){const i=Object.assign({},a);i.type=i.message.type||"unknownmessage";const t=a.message.dataBytes[0],n=a.message.dataBytes[1];if("noteoff"===i.type||"noteon"===i.type&&0===n)this.notesState[t]=!1,i.type="noteoff",i.note=new Note(Utilities.offsetNumber(t,this.octaveOffset+this.input.octaveOffset+wm.octaveOffset),{rawAttack:0,rawRelease:n}),i.value=Utilities.from7bitToFloat(n),i.rawValue=n,i.velocity=i.note.release,i.rawVelocity=i.note.rawRelease;else if("noteon"===i.type)this.notesState[t]=!0,i.note=new Note(Utilities.offsetNumber(t,this.octaveOffset+this.input.octaveOffset+wm.octaveOffset),{rawAttack:n}),i.value=Utilities.from7bitToFloat(n),i.rawValue=n,i.velocity=i.note.attack,i.rawVelocity=i.note.rawAttack;else if("keyaftertouch"===i.type)i.note=new Note(Utilities.offsetNumber(t,this.octaveOffset+this.input.octaveOffset+wm.octaveOffset)),i.value=Utilities.from7bitToFloat(n),i.rawValue=n,i.identifier=i.note.identifier,i.key=i.note.number,i.rawKey=t;else if("controlchange"===i.type){i.controller={number:t,name:Utilities.getCcNameByNumber(t)},i.subtype=i.controller.name||"controller"+t,i.value=Utilities.from7bitToFloat(n),i.rawValue=n;const a=Object.assign({},i);a.type=`${i.type}-controller${t}`,delete a.subtype,this.emit(a.type,a),120<=i.message.dataBytes[0]&&this._parseChannelModeMessage(i),this.parameterNumberEventsEnabled&&this._isRpnOrNrpnController(i.message.dataBytes[0])&&this._parseEventForParameterNumber(i)}else"programchange"===i.type?(i.value=t,i.rawValue=i.value):"channelaftertouch"===i.type?(i.value=Utilities.from7bitToFloat(t),i.rawValue=t):"pitchbend"===i.type?(i.value=((n<<7)+t-8192)/8192,i.rawValue=(n<<7)+t):i.type="unknownmessage";this.emit(i.type,i)}_parseChannelModeMessage(n){const e=Object.assign({},n);e.type=e.controller.name,"localcontrol"===e.type&&(e.value=127===e.message.data[2],e.rawValue=e.message.data[2]),"omnimodeon"===e.type?(e.type="omnimode",e.value=!0,e.rawValue=e.message.data[2]):"omnimodeoff"===e.type&&(e.type="omnimode",e.value=!1,e.rawValue=e.message.data[2]),"monomodeon"===e.type?(e.type="monomode",e.value=!0,e.rawValue=e.message.data[2]):"polymodeon"===e.type&&(e.type="monomode",e.value=!1,e.rawValue=e.message.data[2]),this.emit(e.type,e)}_parseEventForParameterNumber(a){const e=a.message.dataBytes[0],t=a.message.dataBytes[1],n=Enumerations.MIDI_CONTROL_CHANGE_MESSAGES;e===n.nonregisteredparameterfine||e===n.registeredparameterfine?(this._nrpnBuffer=[],this._rpnBuffer=[],e===n.nonregisteredparameterfine?this._nrpnBuffer=[a.message]:127!==t&&(this._rpnBuffer=[a.message])):e===n.nonregisteredparametercoarse||e===n.registeredparametercoarse?e===n.nonregisteredparametercoarse?(this._rpnBuffer=[],1===this._nrpnBuffer.length?this._nrpnBuffer.push(a.message):this._nrpnBuffer=[]):(this._nrpnBuffer=[],1===this._rpnBuffer.length&&127!==t?this._rpnBuffer.push(a.message):this._rpnBuffer=[]):e!==n.dataentrycoarse&&e!==n.dataentryfine&&e!==n.databuttonincrement&&e!==n.databuttondecrement||(2===this._rpnBuffer.length?this._dispatchParameterNumberEvent("rpn",this._rpnBuffer[0].dataBytes[1],this._rpnBuffer[1].dataBytes[1],a):2===this._nrpnBuffer.length?this._dispatchParameterNumberEvent("nrpn",this._nrpnBuffer[0].dataBytes[1],this._nrpnBuffer[1].dataBytes[1],a):(this._nrpnBuffer=[],this._rpnBuffer=[]))}_isRpnOrNrpnController(t){return t===Enumerations.MIDI_CONTROL_CHANGE_MESSAGES.dataentrycoarse||t===Enumerations.MIDI_CONTROL_CHANGE_MESSAGES.dataentryfine||t===Enumerations.MIDI_CONTROL_CHANGE_MESSAGES.databuttonincrement||t===Enumerations.MIDI_CONTROL_CHANGE_MESSAGES.databuttondecrement||t===Enumerations.MIDI_CONTROL_CHANGE_MESSAGES.nonregisteredparametercoarse||t===Enumerations.MIDI_CONTROL_CHANGE_MESSAGES.nonregisteredparameterfine||t===Enumerations.MIDI_CONTROL_CHANGE_MESSAGES.registeredparametercoarse||t===Enumerations.MIDI_CONTROL_CHANGE_MESSAGES.registeredparameterfine}_dispatchParameterNumberEvent(a,o,t,n){a="nrpn"===a?"nrpn":"rpn";const s={target:n.target,timestamp:n.timestamp,message:n.message,parameterMsb:o,parameterLsb:t,value:Utilities.from7bitToFloat(n.message.dataBytes[1]),rawValue:n.message.dataBytes[1],parameter:"rpn"===a?Object.keys(Enumerations.MIDI_REGISTERED_PARAMETERS).find(n=>Enumerations.MIDI_REGISTERED_PARAMETERS[n][0]===o&&Enumerations.MIDI_REGISTERED_PARAMETERS[n][1]===t):(o<<7)+t};const r=Utilities.getPropertyByValue(Enumerations.MIDI_CONTROL_CHANGE_MESSAGES,n.message.dataBytes[0]);s.type=`${a}-${r}`,this.emit(s.type,s),s.type=a,s.subtype=r,this.emit(s.type,s)}getChannelModeByNumber(t){return wm.validation&&(console.warn("The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class."),t=_Mathfloor(t)),Utilities.getChannelModeByNumber(t)}getCcNameByNumber(t){if(wm.validation&&(console.warn("The 'getCcNameByNumber()' method has been moved to the 'Utilities' class."),!(0<=(t=parseInt(t))&&127>=t)))throw new RangeError("Invalid control change number.");return Utilities.getCcNameByNumber(t)}getNoteState(n){n instanceof Note&&(n=n.identifier);const a=Utilities.guessNoteNumber(n,wm.octaveOffset+this.input.octaveOffset+this.octaveOffset);return this.notesState[a]}get octaveOffset(){return this._octaveOffset}set octaveOffset(t){if(this.validation&&(t=parseInt(t),isNaN(t)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=t}get input(){return this._input}get number(){return this._number}get nrpnEventsEnabled(){return this.parameterNumberEventsEnabled}set nrpnEventsEnabled(t){this.validation&&(t=!!t),this.parameterNumberEventsEnabled=t}}/**
	 * The `Message` class represents a single MIDI message. It has several properties that make it
	 * easy to make sense of the binary data it contains.
	 *
	 * @license Apache-2.0
	 * @since 3.0.0
	 */class Message{constructor(t){this.rawData=t,this.data=Array.from(this.rawData),this.statusByte=this.rawData[0],this.rawDataBytes=this.rawData.slice(1),this.dataBytes=this.data.slice(1),this.isChannelMessage=!1,this.isSystemMessage=!1,this.command=void 0,this.channel=void 0,this.manufacturerId=void 0,this.type=void 0,240>this.statusByte?(this.isChannelMessage=!0,this.command=this.statusByte>>4,this.channel=1+(15&this.statusByte)):(this.isSystemMessage=!0,this.command=this.statusByte),this.isChannelMessage?this.type=Utilities.getPropertyByValue(Enumerations.MIDI_CHANNEL_MESSAGES,this.command):this.isSystemMessage&&(this.type=Utilities.getPropertyByValue(Enumerations.MIDI_SYSTEM_MESSAGES,this.command)),this.statusByte===Enumerations.MIDI_SYSTEM_MESSAGES.sysex&&(0===this.dataBytes[0]?(this.manufacturerId=this.dataBytes.slice(0,3),this.dataBytes=this.dataBytes.slice(3,this.rawDataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(3,this.rawDataBytes.length-1)):(this.manufacturerId=[this.dataBytes[0]],this.dataBytes=this.dataBytes.slice(1,this.dataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(1,this.rawDataBytes.length-1)))}}/**
	 * The `Input` class represents a single MIDI input port. This object is automatically instantiated
	 * by the library according to the host's MIDI subsystem and does not need to be directly
	 * instantiated. Instead, you can access all `Input` objects by referring to the
	 * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as
	 * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and
	 * [`WebMidi.getInputById()`](WebMidi#getInputById).
	 *
	 * Note that a single MIDI device may expose several inputs and/or outputs.
	 *
	 * **Important**: the `Input` class does not directly fire channel-specific MIDI messages
	 * (such as [`noteon`](InputChannel#event:noteon) or
	 * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)
	 * object does that. However, you can still use the
	 * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple
	 * [`InputChannel`](InputChannel) objects at once.
	 *
	 * @fires Input#opened
	 * @fires Input#disconnected
	 * @fires Input#closed
	 * @fires Input#midimessage
	 *
	 * @fires Input#sysex
	 * @fires Input#timecode
	 * @fires Input#songposition
	 * @fires Input#songselect
	 * @fires Input#tunerequest
	 * @fires Input#clock
	 * @fires Input#start
	 * @fires Input#continue
	 * @fires Input#stop
	 * @fires Input#activesensing
	 * @fires Input#reset
	 *
	 * @fires Input#unknownmidimessage
	 *
	 * @extends EventEmitter
	 * @license Apache-2.0
	 */class Input extends EventEmitter{constructor(t){super(),this._midiInput=t,this._octaveOffset=0,this.channels=[];for(let n=1;16>=n;n++)this.channels[n]=new InputChannel(this,n);this._forwarders=[],this._midiInput.onstatechange=this._onStateChange.bind(this),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(t=>t.destroy()),this.channels=[],this._forwarders=[],this._midiInput&&(this._midiInput.onstatechange=null,this._midiInput.onmidimessage=null),await this.close(),this._midiInput=null}_onStateChange(n){let e={timestamp:wm.time,target:this,port:this};"open"===n.port.connection?(e.type="opened",this.emit("opened",e)):"closed"===n.port.connection&&"connected"===n.port.state?(e.type="closed",this.emit("closed",e)):"closed"===n.port.connection&&"disconnected"===n.port.state?(e.type="disconnected",e.port={connection:n.port.connection,id:n.port.id,manufacturer:n.port.manufacturer,name:n.port.name,state:n.port.state,type:n.port.type},this.emit("disconnected",e)):"pending"===n.port.connection&&"disconnected"===n.port.state||console.warn("This statechange event was not caught: ",n.port.connection,n.port.state)}_onMidiMessage(a){const i=new Message(a.data),e={port:this,target:this,message:i,timestamp:a.timeStamp,type:"midimessage",data:i.data,rawData:i.data,statusByte:i.data[0],dataBytes:i.dataBytes};this.emit("midimessage",e),i.isSystemMessage?this._parseEvent(e):i.isChannelMessage&&this.channels[i.channel]._processMidiMessageEvent(e),this._forwarders.forEach(t=>t.forward(i))}_parseEvent(n){const e=Object.assign({},n);e.type=e.message.type||"unknownmidimessage","songselect"===e.type&&(e.song=n.data[1]+1,e.value=n.data[1],e.rawValue=e.value),this.emit(e.type,e)}async open(){try{await this._midiInput.open()}catch(t){return Promise.reject(t)}return Promise.resolve(this)}async close(){if(!this._midiInput)return Promise.resolve(this);try{await this._midiInput.close()}catch(t){return Promise.reject(t)}return Promise.resolve(this)}getChannelModeByNumber(){wm.validation&&console.warn("The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.")}addListener(a,i,o={}){if(wm.validation&&"function"==typeof o){let t=null==i?void 0:[].concat(i);i=o,o={channels:t}}if(Enumerations.CHANNEL_EVENTS.includes(a)){void 0===o.channels&&(o.channels=Enumerations.MIDI_CHANNEL_NUMBERS);let e=[];return Utilities.sanitizeChannels(o.channels).forEach(t=>{e.push(this.channels[t].addListener(a,i,o))}),e}return super.addListener(a,i,o)}addOneTimeListener(a,e,t={}){return t.remaining=1,this.addListener(a,e,t)}on(a,e,t,n){return this.addListener(a,e,t,n)}hasListener(a,i,s={}){if(wm.validation&&"function"==typeof s){let t=[].concat(i);i=s,s={channels:t}}return Enumerations.CHANNEL_EVENTS.includes(a)?(void 0===s.channels&&(s.channels=Enumerations.MIDI_CHANNEL_NUMBERS),Utilities.sanitizeChannels(s.channels).every(e=>this.channels[e].hasListener(a,i))):super.hasListener(a,i)}removeListener(a,i,r={}){if(wm.validation&&"function"==typeof r){let t=[].concat(i);i=r,r={channels:t}}return(void 0===r.channels&&(r.channels=Enumerations.MIDI_CHANNEL_NUMBERS),null==a)?(Utilities.sanitizeChannels(r.channels).forEach(t=>{this.channels[t]&&this.channels[t].removeListener()}),super.removeListener()):void(Enumerations.CHANNEL_EVENTS.includes(a)?Utilities.sanitizeChannels(r.channels).forEach(e=>{this.channels[e].removeListener(a,i,r)}):super.removeListener(a,i,r))}addForwarder(a,e={}){let t;return t=a instanceof Forwarder?a:new Forwarder(a,e),this._forwarders.push(t),t}removeForwarder(n){this._forwarders=this._forwarders.filter(e=>e!==n)}hasForwarder(t){return this._forwarders.includes(t)}get name(){return this._midiInput.name}get id(){return this._midiInput.id}get connection(){return this._midiInput.connection}get manufacturer(){return this._midiInput.manufacturer}get octaveOffset(){return this._octaveOffset}set octaveOffset(t){if(this.validation&&(t=parseInt(t),isNaN(t)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=t}get state(){return this._midiInput.state}get type(){return this._midiInput.type}get nrpnEventsEnabled(){return wm.validation&&console.warn("The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class."),!1}}if(Utilities.isNode){try{window.navigator}catch(err){let jzz;eval("jzz = require(\"jzz\")"),commonjsGlobal.navigator=jzz}try{}catch(err){let performance;eval("performance = require(\"perf_hooks\").performance"),commonjsGlobal.performance=performance}}/**
	 * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it
	 * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.
	 *
	 * When using the WebMidi.js library, you should know that the `WebMidi` class has already been
	 * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should
	 * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6
	 * module) version, you get an already-instantiated object when you import the module.
	 *
	 * @fires WebMidi#connected
	 * @fires WebMidi#disabled
	 * @fires WebMidi#disconnected
	 * @fires WebMidi#enabled
	 * @fires WebMidi#error
	 * @fires WebMidi#midiaccessgranted
	 * @fires WebMidi#portschanged
	 *
	 * @extends EventEmitter
	 * @license Apache-2.0
	 */class WebMidi extends EventEmitter{constructor(){super(),this.defaults={note:{attack:Utilities.from7bitToFloat(64),release:Utilities.from7bitToFloat(64),duration:1/0}},this.interface=null,this.validation=!0,this._inputs=[],this._disconnectedInputs=[],this._outputs=[],this._disconnectedOutputs=[],this._stateChangeQueue=[],this._octaveOffset=0}async enable(a={},i=!1){if(this.validation=!1!==a.validation,this.validation&&("function"==typeof a&&(a={callback:a,sysex:i}),i&&(a.sysex=!0)),this.enabled)return"function"==typeof a.callback&&a.callback(),Promise.resolve();const o={timestamp:this.time,target:this,type:"error",error:void 0},t={timestamp:this.time,target:this,type:"midiaccessgranted"},n={timestamp:this.time,target:this,type:"enabled"};try{this.interface="function"==typeof a.requestMIDIAccessFunction?await a.requestMIDIAccessFunction({sysex:a.sysex,software:a.software}):await navigator.requestMIDIAccess({sysex:a.sysex,software:a.software})}catch(e){return o.error=e,this.emit("error",o),"function"==typeof a.callback&&a.callback(e),Promise.reject(e)}this.emit("midiaccessgranted",t),this.interface.onstatechange=this._onInterfaceStateChange.bind(this);try{await this._updateInputsAndOutputs()}catch(e){return o.error=e,this.emit("error",o),"function"==typeof a.callback&&a.callback(e),Promise.reject(e)}return this.emit("enabled",n),"function"==typeof a.callback&&a.callback(),Promise.resolve(this)}async disable(){return this._destroyInputsAndOutputs().then(()=>{navigator&&"function"==typeof navigator.close&&navigator.close(),this.interface&&(this.interface.onstatechange=void 0),this.interface=null;let t={timestamp:this.time,target:this,type:"disabled"};this.emit("disabled",t),this.removeListener()})}getInputById(n,e={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!n)return}if(e.disconnected){for(let e=0;e<this._disconnectedInputs.length;e++)if(this._disconnectedInputs[e].id===n.toString())return this._disconnectedInputs[e];}else for(let e=0;e<this.inputs.length;e++)if(this.inputs[e].id===n.toString())return this.inputs[e]}getInputByName(n,a={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!n)return;n=n.toString()}if(a.disconnected){for(let e=0;e<this._disconnectedInputs.length;e++)if(~this._disconnectedInputs[e].name.indexOf(n))return this._disconnectedInputs[e];}else for(let e=0;e<this.inputs.length;e++)if(~this.inputs[e].name.indexOf(n))return this.inputs[e]}getOutputByName(n,a={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!n)return;n=n.toString()}if(a.disconnected){for(let e=0;e<this._disconnectedOutputs.length;e++)if(~this._disconnectedOutputs[e].name.indexOf(n))return this._disconnectedOutputs[e];}else for(let e=0;e<this.outputs.length;e++)if(~this.outputs[e].name.indexOf(n))return this.outputs[e]}getOutputById(n,e={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!n)return}if(e.disconnected){for(let e=0;e<this._disconnectedOutputs.length;e++)if(this._disconnectedOutputs[e].id===n.toString())return this._disconnectedOutputs[e];}else for(let e=0;e<this.outputs.length;e++)if(this.outputs[e].id===n.toString())return this.outputs[e]}noteNameToNumber(t){return this.validation&&console.warn("The noteNameToNumber() method is deprecated. Use Utilities.toNoteNumber() instead."),Utilities.toNoteNumber(t,this.octaveOffset)}getOctave(t){return this.validation&&(console.warn("The getOctave()is deprecated. Use Utilities.getNoteDetails() instead"),t=parseInt(t)),!isNaN(t)&&0<=t&&127>=t&&Utilities.getNoteDetails(Utilities.offsetNumber(t,this.octaveOffset)).octave}sanitizeChannels(t){return this.validation&&console.warn("The sanitizeChannels() method has been moved to the utilities class."),Utilities.sanitizeChannels(t)}toMIDIChannels(t){return this.validation&&console.warn("The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead."),Utilities.sanitizeChannels(t)}guessNoteNumber(t){return this.validation&&console.warn("The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead."),Utilities.guessNoteNumber(t,this.octaveOffset)}getValidNoteArray(n,e={}){return this.validation&&console.warn("The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()"),Utilities.buildNoteArray(n,e)}convertToTimestamp(t){return this.validation&&console.warn("The convertToTimestamp() method has been moved to Utilities.toTimestamp()."),Utilities.toTimestamp(t)}async _destroyInputsAndOutputs(){let n=[];return this.inputs.forEach(e=>n.push(e.destroy())),this.outputs.forEach(e=>n.push(e.destroy())),Promise.all(n).then(()=>{this._inputs=[],this._outputs=[]})}_onInterfaceStateChange(a){this._updateInputsAndOutputs();let e={timestamp:a.timeStamp,type:a.port.state,target:this};if("connected"===a.port.state&&"open"===a.port.connection){"output"===a.port.type?e.port=this.getOutputById(a.port.id):"input"===a.port.type&&(e.port=this.getInputById(a.port.id)),this.emit(a.port.state,e);const t=Object.assign({},e);t.type="portschanged",this.emit(t.type,t)}else if("disconnected"===a.port.state&&"pending"===a.port.connection){"input"===a.port.type?e.port=this.getInputById(a.port.id,{disconnected:!0}):"output"===a.port.type&&(e.port=this.getOutputById(a.port.id,{disconnected:!0})),this.emit(a.port.state,e);const t=Object.assign({},e);t.type="portschanged",this.emit(t.type,t)}}async _updateInputsAndOutputs(){return Promise.all([this._updateInputs(),this._updateOutputs()])}async _updateInputs(){if(!this.interface)return;for(let n=this._inputs.length-1;0<=n;n--){const a=this._inputs[n];Array.from(this.interface.inputs.values()).find(t=>t===a._midiInput)||(this._disconnectedInputs.push(a),this._inputs.splice(n,1))}let a=[];return this.interface.inputs.forEach(i=>{if(!this._inputs.find(t=>t._midiInput===i)){let e=this._disconnectedInputs.find(t=>t._midiInput===i);e||(e=new Input(i)),this._inputs.push(e),a.push(e.open())}}),Promise.all(a)}async _updateOutputs(){if(!this.interface)return;for(let n=this._outputs.length-1;0<=n;n--){const a=this._outputs[n];Array.from(this.interface.outputs.values()).find(t=>t===a._midiOutput)||(this._disconnectedOutputs.push(a),this._outputs.splice(n,1))}let a=[];return this.interface.outputs.forEach(i=>{if(!this._outputs.find(t=>t._midiOutput===i)){let e=this._disconnectedOutputs.find(t=>t._midiOutput===i);e||(e=new Output(i)),this._outputs.push(e),a.push(e.open())}}),Promise.all(a)}get enabled(){return null!==this.interface}get inputs(){return this._inputs}get isNode(){return this.validation&&console.warn("WebMidi.isNode has been deprecated. Use Utilities.isNode instead."),Utilities.isNode}get isBrowser(){return this.validation&&console.warn("WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead."),Utilities.isBrowser}get octaveOffset(){return this._octaveOffset}set octaveOffset(t){if(this.validation&&(t=parseInt(t),isNaN(t)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=t}get outputs(){return this._outputs}get supported(){return"undefined"!=typeof navigator&&navigator.requestMIDIAccess}get sysexEnabled(){return this.interface&&this.interface.sysexEnabled}get time(){return performance.now()}get version(){return"3.0.25"}get flavour(){return"cjs"}get CHANNEL_EVENTS(){return this.validation&&console.warn("The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS."),Enumerations.CHANNEL_EVENTS}get MIDI_SYSTEM_MESSAGES(){return this.validation&&console.warn("The MIDI_SYSTEM_MESSAGES enum has been moved to Enumerations.MIDI_SYSTEM_MESSAGES."),Enumerations.MIDI_SYSTEM_MESSAGES}get MIDI_CHANNEL_MODE_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to Enumerations.MIDI_CHANNEL_MODE_MESSAGES."),Enumerations.MIDI_CHANNEL_MODE_MESSAGES}get MIDI_CONTROL_CHANGE_MESSAGES(){return this.validation&&console.warn("The MIDI_CONTROL_CHANGE_MESSAGES enum has been moved to Enumerations.MIDI_CONTROL_CHANGE_MESSAGES."),Enumerations.MIDI_CONTROL_CHANGE_MESSAGES}get MIDI_REGISTERED_PARAMETER(){return this.validation&&console.warn("The MIDI_REGISTERED_PARAMETER enum has been moved to Enumerations.MIDI_REGISTERED_PARAMETERS."),this.MIDI_REGISTERED_PARAMETERS}get NOTES(){return this.validation&&console.warn("The NOTES enum has been deprecated."),["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}}const wm=new WebMidi;wm.constructor=null,exports.Enumerations=Enumerations,exports.Forwarder=Forwarder,exports.Input=Input,exports.InputChannel=InputChannel,exports.Message=Message,exports.Note=Note,exports.Output=Output,exports.OutputChannel=OutputChannel,exports.Utilities=Utilities,exports.WebMidi=wm});unwrapExports(webmidi_cjs_min);var webmidi_cjs_min_1=webmidi_cjs_min.Enumerations;var webmidi_cjs_min_2=webmidi_cjs_min.Forwarder;var webmidi_cjs_min_3=webmidi_cjs_min.Input;var webmidi_cjs_min_4=webmidi_cjs_min.InputChannel;var webmidi_cjs_min_5=webmidi_cjs_min.Message;var webmidi_cjs_min_6=webmidi_cjs_min.Note;var webmidi_cjs_min_7=webmidi_cjs_min.Output;var webmidi_cjs_min_8=webmidi_cjs_min.OutputChannel;var webmidi_cjs_min_9=webmidi_cjs_min.Utilities;var webmidi_cjs_min_10=webmidi_cjs_min.WebMidi;class Ball{constructor(e,t=0){this.id=t,this.position={x:NaN,y:NaN},this.color=e,this.canvas=null,this.animations=[],this.animationAt=-1,this.elapsed=0,this.midi={note:0,channel:t+1,velocity:0,noteOn:!1}}update(e,t=!1){const{animations:n}=this;t&&(this.animationAt=-1,this.elapsed=0),this.elapsed+=e;let a=n[this.animationAt];if("throw"===a.type&&!this.midi.noteOn){if(this.midi.noteOn=!0,this.midi.velocity=127,this.midi.note=this.id+40,webmidi_cjs_min_10.enabled){const e=webmidi_cjs_min_10.getOutputByName("IAC Driver Bus 1").channels[this.midi.channel];e&&e.playNote(this.midi.note)}console.log("%c Ball! \uD83C\uDFB1 %s","color: "+this.color+"; background: #222; font-size: 12px;",this.midi.noteOn?"noteON":"noteOFF"),document.getElementById("midi-output").innerHTML+=`<span style="color: ${this.color};">Ball! 🎱 noteON ${this.midi.note}</span> `,document.getElementById("midi-output").innerHTML+=`<br>`}if("catch"===a.type&&this.midi.noteOn){if(this.midi.noteOn=!1,this.midi.velocity=0,this.midi.note=this.id+40,webmidi_cjs_min_10.enabled){const e=webmidi_cjs_min_10.getOutputByName("IAC Driver Bus 1").channels[this.midi.channel];e&&e.stopNote(this.midi.note)}console.log("%c Ball! \uD83C\uDFB1 %s","color: "+this.color+"; background: #222; font-size: 12px;",this.midi.noteOn?"noteON":"noteOFF"),document.getElementById("midi-output").innerHTML+=`<span style="color: ${this.color};">Ball! 🎱 noteOFF ${this.midi.note}</span> `,document.getElementById("midi-output").innerHTML+=`<br>`}for(;this.elapsed>=a.duration;)this.animationAt=(this.animationAt+1)%n.length,this.elapsed-=a.duration,a=n[this.animationAt];this.position=a.getPosition(this.elapsed)}draw(e,t,n){var a=Math.PI;const{ballRadius:i,multiplier:s}=t;const{canvas:r}=this;if(n||(n={x:this.position.x*s,y:this.position.y*s}),r){const t=r.width/2;e.drawImage(r,n.x-t,n.y-t)}else{e.beginPath(),e.arc(n.x,n.y,i*s,0,2*a),e.fillStyle=this.color,e.globalAlpha=.9,e.fill(),e.closePath()}}}class Polynomial{constructor(e){this.coefficients=e}at(e){return this.coefficients.reduce((t,n)=>n+e*t)}differentiate(){return new Polynomial(this.coefficients.slice(0,-1).map((e,t,{length:n})=>(n-t)*e))}}class Spline{constructor(e,t=0,a=0){this.polynomials=[],this.xs=e.map(({x:e})=>e),this.ys=e.map(({y:e})=>e);const s=this.xs.length;const n=[];const r=[];const o=[];const l=[];const p=[];for(let o=0;o<s-1;o++)n[o]=this.xs[o+1]-this.xs[o],r[o]=(this.ys[o+1]-this.ys[o])/n[o];o[0]=2*(n[0]+n[1]),l[0]=6*(r[1]-r[0]);for(let d=1;d<s-1;d++)o[d]=2*(n[d]+n[d-1])-n[d-1]*n[d-1]/o[d-1],l[d]=6*(r[d]-r[d-1])-n[d-1]*l[d-1]/o[d-1];p[0]=t,p[s-1]=a;for(let r=s-2;0<r;r--)p[r]=(l[r]-n[r]*p[r+1])/o[r];for(let r=0;r<s-1;r++){const e=this.ys[r];const t=-(n[r]*p[r+1]/6)-n[r]*p[r]/3+(this.ys[r+1]-this.ys[r])/n[r];const i=p[r]/2;const s=(p[r+1]-p[r])/(6*n[r]);this.polynomials.push(new Polynomial([s,i,t,e]))}}at(e){const{xs:t}=this;const a=this.polynomials.length;const n=_Mathmin(t[0],t[a]);const s=_Mathmax(t[0],t[a]);if(e<n||e>s)throw new Error("Out of bounds.");let r=0;if(t[0]<t[a])for(;r<a&&e>t[r+1];)r++;else for(;r<a&&e<t[r+1];)r++;return this.polynomials[r].at(e-t[r])}maximum(){const e={x:null,y:null};const{xs:t}=this;for(let n=0;n<this.polynomials.length;n++){const i=this.polynomials[n].differentiate();const[s,a,r]=i.coefficients;const o=_Mathsqrt(a*a-4*s*r);const l=(-a+o)/(2*s)+t[n];const d=(-a-o)/(2*s)+t[n];const c=_Mathmin(t[n],t[n+1]);const p=_Mathmax(t[n],t[n+1]);if(l>=c&&l<=p){const t=this.at(l);t>e.y&&(e.x=l,e.y=t)}if(d>=c&&d<=p){const t=this.at(d);t>e.y&&(e.x=d,e.y=t)}}return e}}const motion={s:(e,n,a)=>e*a+.5*n*a*a,v:(e,t,n)=>_Mathsqrt(e*e+2*t*n)};const gravity={x:0,y:-9.81/1e3};const points=[{x:0,y:0},{x:5,y:30},{x:30,y:100},{x:95,y:30},{x:100,y:0}];const catchSpline=new Spline(points);const getPosition={catch:function(e){const t=e/this.duration;const n={x:this.position.x+t*this.width,y:this.position.y-catchSpline.at(100*t)*this.yModifier};return n},throw:function(e){const t={x:this.position.x+motion.s(this.velocity.x,this.acceleration.x,e),y:this.position.y+motion.s(this.velocity.y,this.acceleration.y,e)};return t},wait:function(){return this.position}};let canvases=null;const _settings$1=Symbol.for("settings");const _balls=Symbol.for("balls");const _virtual=Symbol.for("virtual");const _settings$2=Symbol.for("settings");const _balls$1=Symbol.for("balls");const _virtual$1=Symbol.for("virtual");const _settings$3=Symbol.for("settings");const _balls$2=Symbol.for("balls");const _loop=Symbol.for("loop");const _balls$3=Symbol.for("balls");const _loop$1=Symbol.for("loop");const _balls$4=Symbol.for("balls");const _settings$4=Symbol.for("settings");const _balls$5=Symbol.for("balls");const _settings$5=Symbol.for("settings");const _settings$6=Symbol.for("settings");var gif=createCommonjsModule(function(e){(function(t){e.exports=t()})(function(){return function r(d,t,n){function a(i,s){if(!t[i]){if(!d[i]){var o="function"==typeof commonjsRequire&&commonjsRequire;if(!s&&o)return o(i,!0);if(e)return e(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var p=t[i]={exports:{}};d[i][0].call(p.exports,function(t){var e=d[i][1][t];return a(e?e:t)},p,p.exports,r,d,t,n)}return t[i].exports}var e="function"==typeof commonjsRequire&&commonjsRequire;for(var i=0;i<n.length;i++)a(n[i]);return a}({1:[function(e,t){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function a(e){return"function"==typeof e}function i(e){return"number"==typeof e}function s(e){return"object"==typeof e&&null!==e}function r(e){return void 0===e}t.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(e){if(!i(e)||0>e||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},n.prototype.emit=function(e){var t,n,o,l,d,c;if(this._events||(this._events={}),"error"===e&&(!this._events.error||s(this._events.error)&&!this._events.error.length))if(t=arguments[1],t instanceof Error)throw t;else{var p=new Error("Uncaught, unspecified \"error\" event. ("+t+")");throw p.context=t,p}if(n=this._events[e],r(n))return!1;if(a(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:l=Array.prototype.slice.call(arguments,1),n.apply(this,l);}else if(s(n))for(l=Array.prototype.slice.call(arguments,1),c=n.slice(),o=c.length,d=0;d<o;d++)c[d].apply(this,l);return!0},n.prototype.addListener=function(e,t){var i;if(!a(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,a(t.listener)?t.listener:t),this._events[e]?s(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,s(this._events[e])&&!this._events[e].warned&&(i=r(this._maxListeners)?n.defaultMaxListeners:this._maxListeners,i&&0<i&&this._events[e].length>i&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace())),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(e,t){function n(){this.removeListener(e,n),i||(i=!0,t.apply(this,arguments))}if(!a(t))throw TypeError("listener must be a function");var i=!1;return n.listener=t,this.on(e,n),this},n.prototype.removeListener=function(e,t){var n,r,o,l;if(!a(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(n=this._events[e],o=n.length,r=-1,n===t||a(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(s(n)){for(l=o;0<l--;)if(n[l]===t||n[l].listener&&n[l].listener===t){r=l;break}if(0>r)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(r,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},n.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(n=this._events[e],a(n))this.removeListener(e,n);else if(n)for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},n.prototype.listeners=function(e){var t;return t=this._events&&this._events[e]?a(this._events[e])?[this._events[e]]:this._events[e].slice():[],t},n.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(a(t))return 1;if(t)return t.length}return 0},n.listenerCount=function(e,t){return e.listenerCount(t)}},{}],2:[function(e,t){var n,a,i,s,r;r=navigator.userAgent.toLowerCase(),s=navigator.platform.toLowerCase(),n=r.match(/(opera|ie|firefox|chrome|version)[\s\/:]([\w\d\.]+)?.*?(safari|version[\s\/:]([\w\d\.]+)|$)/)||[null,"unknown",0],i="ie"===n[1]&&document.documentMode,a={name:"version"===n[1]?n[3]:n[1],version:i||parseFloat("opera"===n[1]&&n[4]?n[4]:n[2]),platform:{name:r.match(/ip(?:ad|od|hone)/)?"ios":(r.match(/(?:webos|android)/)||s.match(/mac|win|linux/)||["other"])[0]}},a[a.name]=!0,a[a.name+parseInt(a.version,10)]=!0,a.platform[a.platform.name]=!0,t.exports=a},{}],3:[function(e,t){var n,a,i,s=function(e,t){function n(){this.constructor=e}for(var a in t)r.call(t,a)&&(e[a]=t[a]);return n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype,e},r={}.hasOwnProperty,o=[].indexOf||function(e){for(var t=0,n=this.length;t<n;t++)if(t in this&&this[t]===e)return t;return-1},l=[].slice;n=e("events").EventEmitter,i=e("./browser.coffee"),a=function(e){function t(e){var t,a,i;for(a in this.running=!1,this.options={},this.frames=[],this.freeWorkers=[],this.activeWorkers=[],this.setOptions(e),n)i=n[a],null==(t=this.options)[a]&&(t[a]=i)}var n,a;return s(t,e),n={workerScript:"gif.worker.js",workers:2,repeat:0,background:"#fff",quality:10,width:null,height:null,transparent:null,debug:!1,dither:!1},a={delay:500,copy:!1,dispose:-1},t.prototype.setOption=function(e,t){if(this.options[e]=t,null!=this._canvas&&("width"===e||"height"===e))return this._canvas[e]=t},t.prototype.setOptions=function(e){var t,n,a;for(t in n=[],e)r.call(e,t)&&(a=e[t],n.push(this.setOption(t,a)));return n},t.prototype.addFrame=function(e,t){var n,i;for(i in null==t&&(t={}),n={},n.transparent=this.options.transparent,a)n[i]=t[i]||a[i];if(null==this.options.width&&this.setOption("width",e.width),null==this.options.height&&this.setOption("height",e.height),"undefined"!=typeof ImageData&&null!==ImageData&&e instanceof ImageData)n.data=e.data;else if("undefined"!=typeof CanvasRenderingContext2D&&null!==CanvasRenderingContext2D&&e instanceof CanvasRenderingContext2D||"undefined"!=typeof WebGLRenderingContext&&null!==WebGLRenderingContext&&e instanceof WebGLRenderingContext)t.copy?n.data=this.getContextData(e):n.context=e;else if(null!=e.childNodes)t.copy?n.data=this.getImageData(e):n.image=e;else throw new Error("Invalid image");return this.frames.push(n)},t.prototype.render=function(){var e,t,n,a;if(this.running)throw new Error("Already running");if(null==this.options.width||null==this.options.height)throw new Error("Width and height must be set prior to rendering");if(this.running=!0,this.nextFrame=0,this.finishedFrames=0,this.imageParts=function(){var t,n,a;for(a=[],e=t=0,n=this.frames.length;0<=n?t<n:t>n;e=0<=n?++t:--t)a.push(null);return a}.call(this),n=this.spawnWorkers(),!0===this.options.globalPalette)this.renderNextFrame();else for(e=t=0,a=n;0<=a?t<a:t>a;e=0<=a?++t:--t)this.renderNextFrame();return this.emit("start"),this.emit("progress",0)},t.prototype.abort=function(){for(var e;e=this.activeWorkers.shift(),null!=e;)this.log("killing active worker"),e.terminate();return this.running=!1,this.emit("abort")},t.prototype.spawnWorkers=function(){var e,t,n;return e=_Mathmin(this.options.workers,this.frames.length),function(){n=[];for(var a=t=this.freeWorkers.length;t<=e?a<e:a>e;t<=e?a++:a--)n.push(a);return n}.apply(this).forEach(function(e){return function(t){var n;return e.log("spawning worker "+t),n=new Worker(e.options.workerScript),n.onmessage=function(t){return e.activeWorkers.splice(e.activeWorkers.indexOf(n),1),e.freeWorkers.push(n),e.frameFinished(t.data)},e.freeWorkers.push(n)}}(this)),e},t.prototype.frameFinished=function(e){var t,n,a;if(this.log("frame "+e.index+" finished - "+this.activeWorkers.length+" active"),this.finishedFrames++,this.emit("progress",this.finishedFrames/this.frames.length),this.imageParts[e.index]=e,!0===this.options.globalPalette&&(this.options.globalPalette=e.globalPalette,this.log("global palette analyzed"),2<this.frames.length))for(t=n=1,a=this.freeWorkers.length;1<=a?n<a:n>a;t=1<=a?++n:--n)this.renderNextFrame();return 0<=o.call(this.imageParts,null)?this.renderNextFrame():this.finishRendering()},t.prototype.finishRendering=function(){var e,t,n,a,s,r,o,d,c,p,u,h,m,f,g,v;for(d=0,f=this.imageParts,(s=0,c=f.length);s<c;s++)t=f[s],d+=(t.data.length-1)*t.pageSize+t.cursor;for(d+=t.pageSize-t.cursor,this.log("rendering finished - filesize "+_Mathround(d/1e3)+"kb"),e=new Uint8Array(d),h=0,g=this.imageParts,(r=0,p=g.length);r<p;r++)for(t=g[r],v=t.data,(n=o=0,u=v.length);o<u;n=++o)m=v[n],e.set(m,h),h+=n===t.data.length-1?t.cursor:t.pageSize;return a=new Blob([e],{type:"image/gif"}),this.emit("finished",a,e)},t.prototype.renderNextFrame=function(){var e,t,n;if(0===this.freeWorkers.length)throw new Error("No free workers");return this.nextFrame>=this.frames.length?void 0:(e=this.frames[this.nextFrame++],n=this.freeWorkers.shift(),t=this.getTask(e),this.log("starting frame "+(t.index+1)+" of "+this.frames.length),this.activeWorkers.push(n),n.postMessage(t))},t.prototype.getContextData=function(e){return e.getImageData(0,0,this.options.width,this.options.height).data},t.prototype.getImageData=function(e){var t;return null==this._canvas&&(this._canvas=document.createElement("canvas"),this._canvas.width=this.options.width,this._canvas.height=this.options.height),t=this._canvas.getContext("2d"),t.fillStyle=this.options.background,t.fillRect(0,0,this.options.width,this.options.height),t.drawImage(e,0,0),this.getContextData(t)},t.prototype.getTask=function(e){var t,n;if(t=this.frames.indexOf(e),n={index:t,last:t===this.frames.length-1,delay:e.delay,dispose:e.dispose,transparent:e.transparent,width:this.options.width,height:this.options.height,quality:this.options.quality,dither:this.options.dither,globalPalette:this.options.globalPalette,repeat:this.options.repeat,canTransfer:"chrome"===i.name},null!=e.data)n.data=e.data;else if(null!=e.context)n.data=this.getContextData(e.context);else if(null!=e.image)n.data=this.getImageData(e.image);else throw new Error("Invalid frame");return n},t.prototype.log=function(){var e;return e=1<=arguments.length?l.call(arguments,0):[],this.options.debug?console.log.apply(console,e):void 0},t}(n),t.exports=a},{"./browser.coffee":2,events:1}]},{},[3])(3)})});var worker=`// gif.worker.js 0.2.1 - https://github.com/jnordberg/gif.js
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){var NeuQuant=require("./TypedNeuQuant.js");var LZWEncoder=require("./LZWEncoder.js");function ByteArray(){this.page=-1;this.pages=[];this.newPage()}ByteArray.pageSize=4096;ByteArray.charMap={};for(var i=0;i<256;i++)ByteArray.charMap[i]=String.fromCharCode(i);ByteArray.prototype.newPage=function(){this.pages[++this.page]=new Uint8Array(ByteArray.pageSize);this.cursor=0};ByteArray.prototype.getData=function(){var rv="";for(var p=0;p<this.pages.length;p++){for(var i=0;i<ByteArray.pageSize;i++){rv+=ByteArray.charMap[this.pages[p][i]]}}return rv};ByteArray.prototype.writeByte=function(val){if(this.cursor>=ByteArray.pageSize)this.newPage();this.pages[this.page][this.cursor++]=val};ByteArray.prototype.writeUTFBytes=function(string){for(var l=string.length,i=0;i<l;i++)this.writeByte(string.charCodeAt(i))};ByteArray.prototype.writeBytes=function(array,offset,length){for(var l=length||array.length,i=offset||0;i<l;i++)this.writeByte(array[i])};function GIFEncoder(width,height){this.width=~~width;this.height=~~height;this.transparent=null;this.transIndex=0;this.repeat=-1;this.delay=0;this.image=null;this.pixels=null;this.indexedPixels=null;this.colorDepth=null;this.colorTab=null;this.neuQuant=null;this.usedEntry=new Array;this.palSize=7;this.dispose=-1;this.firstFrame=true;this.sample=10;this.dither=false;this.globalPalette=false;this.out=new ByteArray}GIFEncoder.prototype.setDelay=function(milliseconds){this.delay=Math.round(milliseconds/10)};GIFEncoder.prototype.setFrameRate=function(fps){this.delay=Math.round(100/fps)};GIFEncoder.prototype.setDispose=function(disposalCode){if(disposalCode>=0)this.dispose=disposalCode};GIFEncoder.prototype.setRepeat=function(repeat){this.repeat=repeat};GIFEncoder.prototype.setTransparent=function(color){this.transparent=color};GIFEncoder.prototype.addFrame=function(imageData){this.image=imageData;this.colorTab=this.globalPalette&&this.globalPalette.slice?this.globalPalette:null;this.getImagePixels();this.analyzePixels();if(this.globalPalette===true)this.globalPalette=this.colorTab;if(this.firstFrame){this.writeLSD();this.writePalette();if(this.repeat>=0){this.writeNetscapeExt()}}this.writeGraphicCtrlExt();this.writeImageDesc();if(!this.firstFrame&&!this.globalPalette)this.writePalette();this.writePixels();this.firstFrame=false};GIFEncoder.prototype.finish=function(){this.out.writeByte(59)};GIFEncoder.prototype.setQuality=function(quality){if(quality<1)quality=1;this.sample=quality};GIFEncoder.prototype.setDither=function(dither){if(dither===true)dither="FloydSteinberg";this.dither=dither};GIFEncoder.prototype.setGlobalPalette=function(palette){this.globalPalette=palette};GIFEncoder.prototype.getGlobalPalette=function(){return this.globalPalette&&this.globalPalette.slice&&this.globalPalette.slice(0)||this.globalPalette};GIFEncoder.prototype.writeHeader=function(){this.out.writeUTFBytes("GIF89a")};GIFEncoder.prototype.analyzePixels=function(){if(!this.colorTab){this.neuQuant=new NeuQuant(this.pixels,this.sample);this.neuQuant.buildColormap();this.colorTab=this.neuQuant.getColormap()}if(this.dither){this.ditherPixels(this.dither.replace("-serpentine",""),this.dither.match(/-serpentine/)!==null)}else{this.indexPixels()}this.pixels=null;this.colorDepth=8;this.palSize=7;if(this.transparent!==null){this.transIndex=this.findClosest(this.transparent,true)}};GIFEncoder.prototype.indexPixels=function(imgq){var nPix=this.pixels.length/3;this.indexedPixels=new Uint8Array(nPix);var k=0;for(var j=0;j<nPix;j++){var index=this.findClosestRGB(this.pixels[k++]&255,this.pixels[k++]&255,this.pixels[k++]&255);this.usedEntry[index]=true;this.indexedPixels[j]=index}};GIFEncoder.prototype.ditherPixels=function(kernel,serpentine){var kernels={FalseFloydSteinberg:[[3/8,1,0],[3/8,0,1],[2/8,1,1]],FloydSteinberg:[[7/16,1,0],[3/16,-1,1],[5/16,0,1],[1/16,1,1]],Stucki:[[8/42,1,0],[4/42,2,0],[2/42,-2,1],[4/42,-1,1],[8/42,0,1],[4/42,1,1],[2/42,2,1],[1/42,-2,2],[2/42,-1,2],[4/42,0,2],[2/42,1,2],[1/42,2,2]],Atkinson:[[1/8,1,0],[1/8,2,0],[1/8,-1,1],[1/8,0,1],[1/8,1,1],[1/8,0,2]]};if(!kernel||!kernels[kernel]){throw"Unknown dithering kernel: "+kernel}var ds=kernels[kernel];var index=0,height=this.height,width=this.width,data=this.pixels;var direction=serpentine?-1:1;this.indexedPixels=new Uint8Array(this.pixels.length/3);for(var y=0;y<height;y++){if(serpentine)direction=direction*-1;for(var x=direction==1?0:width-1,xend=direction==1?width:0;x!==xend;x+=direction){index=y*width+x;var idx=index*3;var r1=data[idx];var g1=data[idx+1];var b1=data[idx+2];idx=this.findClosestRGB(r1,g1,b1);this.usedEntry[idx]=true;this.indexedPixels[index]=idx;idx*=3;var r2=this.colorTab[idx];var g2=this.colorTab[idx+1];var b2=this.colorTab[idx+2];var er=r1-r2;var eg=g1-g2;var eb=b1-b2;for(var i=direction==1?0:ds.length-1,end=direction==1?ds.length:0;i!==end;i+=direction){var x1=ds[i][1];var y1=ds[i][2];if(x1+x>=0&&x1+x<width&&y1+y>=0&&y1+y<height){var d=ds[i][0];idx=index+x1+y1*width;idx*=3;data[idx]=Math.max(0,Math.min(255,data[idx]+er*d));data[idx+1]=Math.max(0,Math.min(255,data[idx+1]+eg*d));data[idx+2]=Math.max(0,Math.min(255,data[idx+2]+eb*d))}}}}};GIFEncoder.prototype.findClosest=function(c,used){return this.findClosestRGB((c&16711680)>>16,(c&65280)>>8,c&255,used)};GIFEncoder.prototype.findClosestRGB=function(r,g,b,used){if(this.colorTab===null)return-1;if(this.neuQuant&&!used){return this.neuQuant.lookupRGB(r,g,b)}var c=b|g<<8|r<<16;var minpos=0;var dmin=256*256*256;var len=this.colorTab.length;for(var i=0,index=0;i<len;index++){var dr=r-(this.colorTab[i++]&255);var dg=g-(this.colorTab[i++]&255);var db=b-(this.colorTab[i++]&255);var d=dr*dr+dg*dg+db*db;if((!used||this.usedEntry[index])&&d<dmin){dmin=d;minpos=index}}return minpos};GIFEncoder.prototype.getImagePixels=function(){var w=this.width;var h=this.height;this.pixels=new Uint8Array(w*h*3);var data=this.image;var srcPos=0;var count=0;for(var i=0;i<h;i++){for(var j=0;j<w;j++){this.pixels[count++]=data[srcPos++];this.pixels[count++]=data[srcPos++];this.pixels[count++]=data[srcPos++];srcPos++}}};GIFEncoder.prototype.writeGraphicCtrlExt=function(){this.out.writeByte(33);this.out.writeByte(249);this.out.writeByte(4);var transp,disp;if(this.transparent===null){transp=0;disp=0}else{transp=1;disp=2}if(this.dispose>=0){disp=this.dispose&7}disp<<=2;this.out.writeByte(0|disp|0|transp);this.writeShort(this.delay);this.out.writeByte(this.transIndex);this.out.writeByte(0)};GIFEncoder.prototype.writeImageDesc=function(){this.out.writeByte(44);this.writeShort(0);this.writeShort(0);this.writeShort(this.width);this.writeShort(this.height);if(this.firstFrame||this.globalPalette){this.out.writeByte(0)}else{this.out.writeByte(128|0|0|0|this.palSize)}};GIFEncoder.prototype.writeLSD=function(){this.writeShort(this.width);this.writeShort(this.height);this.out.writeByte(128|112|0|this.palSize);this.out.writeByte(0);this.out.writeByte(0)};GIFEncoder.prototype.writeNetscapeExt=function(){this.out.writeByte(33);this.out.writeByte(255);this.out.writeByte(11);this.out.writeUTFBytes("NETSCAPE2.0");this.out.writeByte(3);this.out.writeByte(1);this.writeShort(this.repeat);this.out.writeByte(0)};GIFEncoder.prototype.writePalette=function(){this.out.writeBytes(this.colorTab);var n=3*256-this.colorTab.length;for(var i=0;i<n;i++)this.out.writeByte(0)};GIFEncoder.prototype.writeShort=function(pValue){this.out.writeByte(pValue&255);this.out.writeByte(pValue>>8&255)};GIFEncoder.prototype.writePixels=function(){var enc=new LZWEncoder(this.width,this.height,this.indexedPixels,this.colorDepth);enc.encode(this.out)};GIFEncoder.prototype.stream=function(){return this.out};module.exports=GIFEncoder},{"./LZWEncoder.js":2,"./TypedNeuQuant.js":3}],2:[function(require,module,exports){var EOF=-1;var BITS=12;var HSIZE=5003;var masks=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535];function LZWEncoder(width,height,pixels,colorDepth){var initCodeSize=Math.max(2,colorDepth);var accum=new Uint8Array(256);var htab=new Int32Array(HSIZE);var codetab=new Int32Array(HSIZE);var cur_accum,cur_bits=0;var a_count;var free_ent=0;var maxcode;var clear_flg=false;var g_init_bits,ClearCode,EOFCode;function char_out(c,outs){accum[a_count++]=c;if(a_count>=254)flush_char(outs)}function cl_block(outs){cl_hash(HSIZE);free_ent=ClearCode+2;clear_flg=true;output(ClearCode,outs)}function cl_hash(hsize){for(var i=0;i<hsize;++i)htab[i]=-1}function compress(init_bits,outs){var fcode,c,i,ent,disp,hsize_reg,hshift;g_init_bits=init_bits;clear_flg=false;n_bits=g_init_bits;maxcode=MAXCODE(n_bits);ClearCode=1<<init_bits-1;EOFCode=ClearCode+1;free_ent=ClearCode+2;a_count=0;ent=nextPixel();hshift=0;for(fcode=HSIZE;fcode<65536;fcode*=2)++hshift;hshift=8-hshift;hsize_reg=HSIZE;cl_hash(hsize_reg);output(ClearCode,outs);outer_loop:while((c=nextPixel())!=EOF){fcode=(c<<BITS)+ent;i=c<<hshift^ent;if(htab[i]===fcode){ent=codetab[i];continue}else if(htab[i]>=0){disp=hsize_reg-i;if(i===0)disp=1;do{if((i-=disp)<0)i+=hsize_reg;if(htab[i]===fcode){ent=codetab[i];continue outer_loop}}while(htab[i]>=0)}output(ent,outs);ent=c;if(free_ent<1<<BITS){codetab[i]=free_ent++;htab[i]=fcode}else{cl_block(outs)}}output(ent,outs);output(EOFCode,outs)}function encode(outs){outs.writeByte(initCodeSize);remaining=width*height;curPixel=0;compress(initCodeSize+1,outs);outs.writeByte(0)}function flush_char(outs){if(a_count>0){outs.writeByte(a_count);outs.writeBytes(accum,0,a_count);a_count=0}}function MAXCODE(n_bits){return(1<<n_bits)-1}function nextPixel(){if(remaining===0)return EOF;--remaining;var pix=pixels[curPixel++];return pix&255}function output(code,outs){cur_accum&=masks[cur_bits];if(cur_bits>0)cur_accum|=code<<cur_bits;else cur_accum=code;cur_bits+=n_bits;while(cur_bits>=8){char_out(cur_accum&255,outs);cur_accum>>=8;cur_bits-=8}if(free_ent>maxcode||clear_flg){if(clear_flg){maxcode=MAXCODE(n_bits=g_init_bits);clear_flg=false}else{++n_bits;if(n_bits==BITS)maxcode=1<<BITS;else maxcode=MAXCODE(n_bits)}}if(code==EOFCode){while(cur_bits>0){char_out(cur_accum&255,outs);cur_accum>>=8;cur_bits-=8}flush_char(outs)}}this.encode=encode}module.exports=LZWEncoder},{}],3:[function(require,module,exports){var ncycles=100;var netsize=256;var maxnetpos=netsize-1;var netbiasshift=4;var intbiasshift=16;var intbias=1<<intbiasshift;var gammashift=10;var gamma=1<<gammashift;var betashift=10;var beta=intbias>>betashift;var betagamma=intbias<<gammashift-betashift;var initrad=netsize>>3;var radiusbiasshift=6;var radiusbias=1<<radiusbiasshift;var initradius=initrad*radiusbias;var radiusdec=30;var alphabiasshift=10;var initalpha=1<<alphabiasshift;var alphadec;var radbiasshift=8;var radbias=1<<radbiasshift;var alpharadbshift=alphabiasshift+radbiasshift;var alpharadbias=1<<alpharadbshift;var prime1=499;var prime2=491;var prime3=487;var prime4=503;var minpicturebytes=3*prime4;function NeuQuant(pixels,samplefac){var network;var netindex;var bias;var freq;var radpower;function init(){network=[];netindex=new Int32Array(256);bias=new Int32Array(netsize);freq=new Int32Array(netsize);radpower=new Int32Array(netsize>>3);var i,v;for(i=0;i<netsize;i++){v=(i<<netbiasshift+8)/netsize;network[i]=new Float64Array([v,v,v,0]);freq[i]=intbias/netsize;bias[i]=0}}function unbiasnet(){for(var i=0;i<netsize;i++){network[i][0]>>=netbiasshift;network[i][1]>>=netbiasshift;network[i][2]>>=netbiasshift;network[i][3]=i}}function altersingle(alpha,i,b,g,r){network[i][0]-=alpha*(network[i][0]-b)/initalpha;network[i][1]-=alpha*(network[i][1]-g)/initalpha;network[i][2]-=alpha*(network[i][2]-r)/initalpha}function alterneigh(radius,i,b,g,r){var lo=Math.abs(i-radius);var hi=Math.min(i+radius,netsize);var j=i+1;var k=i-1;var m=1;var p,a;while(j<hi||k>lo){a=radpower[m++];if(j<hi){p=network[j++];p[0]-=a*(p[0]-b)/alpharadbias;p[1]-=a*(p[1]-g)/alpharadbias;p[2]-=a*(p[2]-r)/alpharadbias}if(k>lo){p=network[k--];p[0]-=a*(p[0]-b)/alpharadbias;p[1]-=a*(p[1]-g)/alpharadbias;p[2]-=a*(p[2]-r)/alpharadbias}}}function contest(b,g,r){var bestd=~(1<<31);var bestbiasd=bestd;var bestpos=-1;var bestbiaspos=bestpos;var i,n,dist,biasdist,betafreq;for(i=0;i<netsize;i++){n=network[i];dist=Math.abs(n[0]-b)+Math.abs(n[1]-g)+Math.abs(n[2]-r);if(dist<bestd){bestd=dist;bestpos=i}biasdist=dist-(bias[i]>>intbiasshift-netbiasshift);if(biasdist<bestbiasd){bestbiasd=biasdist;bestbiaspos=i}betafreq=freq[i]>>betashift;freq[i]-=betafreq;bias[i]+=betafreq<<gammashift}freq[bestpos]+=beta;bias[bestpos]-=betagamma;return bestbiaspos}function inxbuild(){var i,j,p,q,smallpos,smallval,previouscol=0,startpos=0;for(i=0;i<netsize;i++){p=network[i];smallpos=i;smallval=p[1];for(j=i+1;j<netsize;j++){q=network[j];if(q[1]<smallval){smallpos=j;smallval=q[1]}}q=network[smallpos];if(i!=smallpos){j=q[0];q[0]=p[0];p[0]=j;j=q[1];q[1]=p[1];p[1]=j;j=q[2];q[2]=p[2];p[2]=j;j=q[3];q[3]=p[3];p[3]=j}if(smallval!=previouscol){netindex[previouscol]=startpos+i>>1;for(j=previouscol+1;j<smallval;j++)netindex[j]=i;previouscol=smallval;startpos=i}}netindex[previouscol]=startpos+maxnetpos>>1;for(j=previouscol+1;j<256;j++)netindex[j]=maxnetpos}function inxsearch(b,g,r){var a,p,dist;var bestd=1e3;var best=-1;var i=netindex[g];var j=i-1;while(i<netsize||j>=0){if(i<netsize){p=network[i];dist=p[1]-g;if(dist>=bestd)i=netsize;else{i++;if(dist<0)dist=-dist;a=p[0]-b;if(a<0)a=-a;dist+=a;if(dist<bestd){a=p[2]-r;if(a<0)a=-a;dist+=a;if(dist<bestd){bestd=dist;best=p[3]}}}}if(j>=0){p=network[j];dist=g-p[1];if(dist>=bestd)j=-1;else{j--;if(dist<0)dist=-dist;a=p[0]-b;if(a<0)a=-a;dist+=a;if(dist<bestd){a=p[2]-r;if(a<0)a=-a;dist+=a;if(dist<bestd){bestd=dist;best=p[3]}}}}}return best}function learn(){var i;var lengthcount=pixels.length;var alphadec=30+(samplefac-1)/3;var samplepixels=lengthcount/(3*samplefac);var delta=~~(samplepixels/ncycles);var alpha=initalpha;var radius=initradius;var rad=radius>>radiusbiasshift;if(rad<=1)rad=0;for(i=0;i<rad;i++)radpower[i]=alpha*((rad*rad-i*i)*radbias/(rad*rad));var step;if(lengthcount<minpicturebytes){samplefac=1;step=3}else if(lengthcount%prime1!==0){step=3*prime1}else if(lengthcount%prime2!==0){step=3*prime2}else if(lengthcount%prime3!==0){step=3*prime3}else{step=3*prime4}var b,g,r,j;var pix=0;i=0;while(i<samplepixels){b=(pixels[pix]&255)<<netbiasshift;g=(pixels[pix+1]&255)<<netbiasshift;r=(pixels[pix+2]&255)<<netbiasshift;j=contest(b,g,r);altersingle(alpha,j,b,g,r);if(rad!==0)alterneigh(rad,j,b,g,r);pix+=step;if(pix>=lengthcount)pix-=lengthcount;i++;if(delta===0)delta=1;if(i%delta===0){alpha-=alpha/alphadec;radius-=radius/radiusdec;rad=radius>>radiusbiasshift;if(rad<=1)rad=0;for(j=0;j<rad;j++)radpower[j]=alpha*((rad*rad-j*j)*radbias/(rad*rad))}}}function buildColormap(){init();learn();unbiasnet();inxbuild()}this.buildColormap=buildColormap;function getColormap(){var map=[];var index=[];for(var i=0;i<netsize;i++)index[network[i][3]]=i;var k=0;for(var l=0;l<netsize;l++){var j=index[l];map[k++]=network[j][0];map[k++]=network[j][1];map[k++]=network[j][2]}return map}this.getColormap=getColormap;this.lookupRGB=inxsearch}module.exports=NeuQuant},{}],4:[function(require,module,exports){var GIFEncoder,renderFrame;GIFEncoder=require("./GIFEncoder.js");renderFrame=function(frame){var encoder,page,stream,transfer;encoder=new GIFEncoder(frame.width,frame.height);if(frame.index===0){encoder.writeHeader()}else{encoder.firstFrame=false}encoder.setTransparent(frame.transparent);encoder.setDispose(frame.dispose);encoder.setRepeat(frame.repeat);encoder.setDelay(frame.delay);encoder.setQuality(frame.quality);encoder.setDither(frame.dither);encoder.setGlobalPalette(frame.globalPalette);encoder.addFrame(frame.data);if(frame.last){encoder.finish()}if(frame.globalPalette===true){frame.globalPalette=encoder.getGlobalPalette()}stream=encoder.stream();frame.data=stream.pages;frame.cursor=stream.cursor;frame.pageSize=stream.constructor.pageSize;if(frame.canTransfer){transfer=function(){var i,len,ref,results;ref=frame.data;results=[];for(i=0,len=ref.length;i<len;i++){page=ref[i];results.push(page.buffer)}return results}();return self.postMessage(frame,transfer)}else{return self.postMessage(frame)}};self.onmessage=function(event){return renderFrame(event.data)}},{"./GIFEncoder.js":1}]},{},[4]);
//# sourceMappingURL=gif.worker.js.map
`;const _settings$7=Symbol.for("settings");const _loop$2=Symbol.for("loop");let workerScript=null;const _settings$8=Symbol.for("settings");const _balls$6=Symbol.for("balls");const _loop$3=Symbol.for("loop");const _virtual$2=Symbol.for("virtual");class Animator{constructor(e,t={}){if(this[_virtual$2]=!1,"string"==typeof e&&(e=document.getElementById(e)),!(e instanceof HTMLCanvasElement))if("object"==typeof e&&e.width&&e.height){const{width:t,height:n}=e;e=document.createElement("canvas"),e.width=t,e.height=n,this[_virtual$2]=!0}else throw new Error("Canvas element not supplied.");this.context=e.getContext("2d"),this.siteswap=null,this.paused=!1,this[_loop$3]=null,this[_balls$6]=[],this[_settings$8]={dwell:.5,slowdown:1,reversed:!1,continuous:!0,ballColor:"#ff3636",beatDuration:300,ballRadius:70,catchWidth:400,innerHeight:0,innerWidth:0,catchHeight:0,multiplier:null},this.configure(t)}}return Animator.Siteswap=siteswap,Animator.prototype.play=play,Animator.prototype.stop=stop,Animator.prototype.pause=pause,Animator.prototype.configure=configure,Animator.prototype.dye=dye,Animator.prototype.seek=seek,Animator.prototype.toGIF=toGIF,Animator.toGIF=toGIF$1,Animator}();